/*
* generated by Xtext
*/
package org.ddmore.mdl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.ddmore.mdl.services.MdlGrammarAccess;

public class MdlParser extends AbstractContentAssistParser {
	
	@Inject
	private MdlGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.ddmore.mdl.ui.contentassist.antlr.internal.InternalMdlParser createParser() {
		org.ddmore.mdl.ui.contentassist.antlr.internal.InternalMdlParser result = new org.ddmore.mdl.ui.contentassist.antlr.internal.InternalMdlParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getMclObjectAccess().getAlternatives(), "rule__MclObject__Alternatives");
					put(grammarAccess.getModelObjectBlockAccess().getAlternatives(), "rule__ModelObjectBlock__Alternatives");
					put(grammarAccess.getParameterObjectBlockAccess().getAlternatives(), "rule__ParameterObjectBlock__Alternatives");
					put(grammarAccess.getDataObjectBlockAccess().getAlternatives(), "rule__DataObjectBlock__Alternatives");
					put(grammarAccess.getTaskObjectBlockAccess().getAlternatives(), "rule__TaskObjectBlock__Alternatives");
					put(grammarAccess.getDataBlockStatementAccess().getAlternatives(), "rule__DataBlockStatement__Alternatives");
					put(grammarAccess.getModelBlockStatementAccess().getAlternatives(), "rule__ModelBlockStatement__Alternatives");
					put(grammarAccess.getModelPredictionBlockStatementAccess().getAlternatives(), "rule__ModelPredictionBlockStatement__Alternatives");
					put(grammarAccess.getGroupVariablesBlockStatementAccess().getAlternatives(), "rule__GroupVariablesBlockStatement__Alternatives");
					put(grammarAccess.getVariabilityBlockStatementAccess().getAlternatives(), "rule__VariabilityBlockStatement__Alternatives");
					put(grammarAccess.getFileBlockStatementAccess().getAlternatives(), "rule__FileBlockStatement__Alternatives");
					put(grammarAccess.getInlineBlockAccess().getValuesAlternatives_3_0(), "rule__InlineBlock__ValuesAlternatives_3_0");
					put(grammarAccess.getRScriptBlockStatementAccess().getAlternatives_2(), "rule__RScriptBlockStatement__Alternatives_2");
					put(grammarAccess.getTaskFunctionBlockAccess().getAlternatives(), "rule__TaskFunctionBlock__Alternatives");
					put(grammarAccess.getBlockStatementAccess().getAlternatives(), "rule__BlockStatement__Alternatives");
					put(grammarAccess.getVerbatimBlockAccess().getAlternatives_2(), "rule__VerbatimBlock__Alternatives_2");
					put(grammarAccess.getTargetLanguageAccess().getAlternatives(), "rule__TargetLanguage__Alternatives");
					put(grammarAccess.getSymbolDeclarationAccess().getAlternatives(), "rule__SymbolDeclaration__Alternatives");
					put(grammarAccess.getSymbolDeclarationAccess().getAlternatives_0_1(), "rule__SymbolDeclaration__Alternatives_0_1");
					put(grammarAccess.getEnumTypeAccess().getAlternatives(), "rule__EnumType__Alternatives");
					put(grammarAccess.getLevelTypeAccess().getAlternatives(), "rule__LevelType__Alternatives");
					put(grammarAccess.getDistributionAccess().getAlternatives(), "rule__Distribution__Alternatives");
					put(grammarAccess.getAnyExpressionAccess().getAlternatives(), "rule__AnyExpression__Alternatives");
					put(grammarAccess.getArgumentAccess().getAlternatives(), "rule__Argument__Alternatives");
					put(grammarAccess.getConditionalStatementAccess().getAlternatives_2(), "rule__ConditionalStatement__Alternatives_2");
					put(grammarAccess.getConditionalStatementAccess().getAlternatives_3_1(), "rule__ConditionalStatement__Alternatives_3_1");
					put(grammarAccess.getLogicalExpressionAccess().getAlternatives_1(), "rule__LogicalExpression__Alternatives_1");
					put(grammarAccess.getAdditiveExpressionAccess().getAlternatives(), "rule__AdditiveExpression__Alternatives");
					put(grammarAccess.getUnaryExpressionAccess().getAlternatives(), "rule__UnaryExpression__Alternatives");
					put(grammarAccess.getPrimaryAccess().getAlternatives(), "rule__Primary__Alternatives");
					put(grammarAccess.getLogicalOperatorAccess().getAlternatives(), "rule__LogicalOperator__Alternatives");
					put(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives(), "rule__MultiplicativeOperator__Alternatives");
					put(grammarAccess.getAdditiveOperatorAccess().getAlternatives(), "rule__AdditiveOperator__Alternatives");
					put(grammarAccess.getUnaryOperatorAccess().getAlternatives(), "rule__UnaryOperator__Alternatives");
					put(grammarAccess.getNUMBERAccess().getAlternatives(), "rule__NUMBER__Alternatives");
					put(grammarAccess.getModelObjectAccess().getGroup(), "rule__ModelObject__Group__0");
					put(grammarAccess.getParameterObjectAccess().getGroup(), "rule__ParameterObject__Group__0");
					put(grammarAccess.getDataObjectAccess().getGroup(), "rule__DataObject__Group__0");
					put(grammarAccess.getTaskObjectAccess().getGroup(), "rule__TaskObject__Group__0");
					put(grammarAccess.getTELObjectAccess().getGroup(), "rule__TELObject__Group__0");
					put(grammarAccess.getIndividualVariablesBlockAccess().getGroup(), "rule__IndividualVariablesBlock__Group__0");
					put(grammarAccess.getModelPredictionBlockAccess().getGroup(), "rule__ModelPredictionBlock__Group__0");
					put(grammarAccess.getRandomVariableDefinitionBlockAccess().getGroup(), "rule__RandomVariableDefinitionBlock__Group__0");
					put(grammarAccess.getInputVariablesBlockAccess().getGroup(), "rule__InputVariablesBlock__Group__0");
					put(grammarAccess.getStructuralParametersBlockAccess().getGroup(), "rule__StructuralParametersBlock__Group__0");
					put(grammarAccess.getVariabilityParametersBlockAccess().getGroup(), "rule__VariabilityParametersBlock__Group__0");
					put(grammarAccess.getOutputVariablesBlockAccess().getGroup(), "rule__OutputVariablesBlock__Group__0");
					put(grammarAccess.getGroupVariablesBlockAccess().getGroup(), "rule__GroupVariablesBlock__Group__0");
					put(grammarAccess.getObservationBlockAccess().getGroup(), "rule__ObservationBlock__Group__0");
					put(grammarAccess.getEstimationBlockAccess().getGroup(), "rule__EstimationBlock__Group__0");
					put(grammarAccess.getSimulationBlockAccess().getGroup(), "rule__SimulationBlock__Group__0");
					put(grammarAccess.getStructuralBlockAccess().getGroup(), "rule__StructuralBlock__Group__0");
					put(grammarAccess.getVariabilityBlockAccess().getGroup(), "rule__VariabilityBlock__Group__0");
					put(grammarAccess.getPriorParametersBlockAccess().getGroup(), "rule__PriorParametersBlock__Group__0");
					put(grammarAccess.getHeaderBlockAccess().getGroup(), "rule__HeaderBlock__Group__0");
					put(grammarAccess.getFileBlockAccess().getGroup(), "rule__FileBlock__Group__0");
					put(grammarAccess.getParameterBlockAccess().getGroup(), "rule__ParameterBlock__Group__0");
					put(grammarAccess.getDataBlockAccess().getGroup(), "rule__DataBlock__Group__0");
					put(grammarAccess.getIgnoreListAccess().getGroup(), "rule__IgnoreList__Group__0");
					put(grammarAccess.getAcceptListAccess().getGroup(), "rule__AcceptList__Group__0");
					put(grammarAccess.getDropListAccess().getGroup(), "rule__DropList__Group__0");
					put(grammarAccess.getModelBlockAccess().getGroup(), "rule__ModelBlock__Group__0");
					put(grammarAccess.getAddListAccess().getGroup(), "rule__AddList__Group__0");
					put(grammarAccess.getRemoveListAccess().getGroup(), "rule__RemoveList__Group__0");
					put(grammarAccess.getSymbolListAccess().getGroup(), "rule__SymbolList__Group__0");
					put(grammarAccess.getLibraryBlockAccess().getGroup(), "rule__LibraryBlock__Group__0");
					put(grammarAccess.getOdeBlockAccess().getGroup(), "rule__OdeBlock__Group__0");
					put(grammarAccess.getMixtureBlockAccess().getGroup(), "rule__MixtureBlock__Group__0");
					put(grammarAccess.getBlockBlockAccess().getGroup(), "rule__BlockBlock__Group__0");
					put(grammarAccess.getBlockBlockAccess().getGroup_4(), "rule__BlockBlock__Group_4__0");
					put(grammarAccess.getDiagBlockAccess().getGroup(), "rule__DiagBlock__Group__0");
					put(grammarAccess.getDiagBlockAccess().getGroup_4(), "rule__DiagBlock__Group_4__0");
					put(grammarAccess.getSameBlockAccess().getGroup(), "rule__SameBlock__Group__0");
					put(grammarAccess.getSameBlockAccess().getGroup_4(), "rule__SameBlock__Group_4__0");
					put(grammarAccess.getInlineBlockAccess().getGroup(), "rule__InlineBlock__Group__0");
					put(grammarAccess.getDesignBlockAccess().getGroup(), "rule__DesignBlock__Group__0");
					put(grammarAccess.getDesignBlockStatementAccess().getGroup(), "rule__DesignBlockStatement__Group__0");
					put(grammarAccess.getVariableListAccess().getGroup(), "rule__VariableList__Group__0");
					put(grammarAccess.getVariableListAccess().getGroup_2(), "rule__VariableList__Group_2__0");
					put(grammarAccess.getRScriptBlockAccess().getGroup(), "rule__RScriptBlock__Group__0");
					put(grammarAccess.getRScriptBlockStatementAccess().getGroup(), "rule__RScriptBlockStatement__Group__0");
					put(grammarAccess.getTaskFunctionDeclarationAccess().getGroup(), "rule__TaskFunctionDeclaration__Group__0");
					put(grammarAccess.getTaskFunctionBodyAccess().getGroup(), "rule__TaskFunctionBody__Group__0");
					put(grammarAccess.getEstimateTaskAccess().getGroup(), "rule__EstimateTask__Group__0");
					put(grammarAccess.getSimulateTaskAccess().getGroup(), "rule__SimulateTask__Group__0");
					put(grammarAccess.getExecuteTaskAccess().getGroup(), "rule__ExecuteTask__Group__0");
					put(grammarAccess.getFormalArgumentsAccess().getGroup(), "rule__FormalArguments__Group__0");
					put(grammarAccess.getFormalArgumentsAccess().getGroup_1(), "rule__FormalArguments__Group_1__0");
					put(grammarAccess.getFunctionCallAccess().getGroup(), "rule__FunctionCall__Group__0");
					put(grammarAccess.getVerbatimBlockAccess().getGroup(), "rule__VerbatimBlock__Group__0");
					put(grammarAccess.getTargetBlockAccess().getGroup(), "rule__TargetBlock__Group__0");
					put(grammarAccess.getTargetBlockAccess().getGroup_1(), "rule__TargetBlock__Group_1__0");
					put(grammarAccess.getSymbolModificationAccess().getGroup(), "rule__SymbolModification__Group__0");
					put(grammarAccess.getSymbolModificationAccess().getGroup_1(), "rule__SymbolModification__Group_1__0");
					put(grammarAccess.getParameterDeclarationAccess().getGroup(), "rule__ParameterDeclaration__Group__0");
					put(grammarAccess.getParameterDeclarationAccess().getGroup_1(), "rule__ParameterDeclaration__Group_1__0");
					put(grammarAccess.getSymbolDeclarationAccess().getGroup_0(), "rule__SymbolDeclaration__Group_0__0");
					put(grammarAccess.getSymbolDeclarationAccess().getGroup_0_1_0(), "rule__SymbolDeclaration__Group_0_1_0__0");
					put(grammarAccess.getSymbolDeclarationAccess().getGroup_1(), "rule__SymbolDeclaration__Group_1__0");
					put(grammarAccess.getCategoricalAccess().getGroup(), "rule__Categorical__Group__0");
					put(grammarAccess.getCategoricalAccess().getGroup_1(), "rule__Categorical__Group_1__0");
					put(grammarAccess.getDistributionAccess().getGroup_0(), "rule__Distribution__Group_0__0");
					put(grammarAccess.getListAccess().getGroup(), "rule__List__Group__0");
					put(grammarAccess.getOdeListAccess().getGroup(), "rule__OdeList__Group__0");
					put(grammarAccess.getRandomListAccess().getGroup(), "rule__RandomList__Group__0");
					put(grammarAccess.getArgumentsAccess().getGroup(), "rule__Arguments__Group__0");
					put(grammarAccess.getArgumentsAccess().getGroup_1(), "rule__Arguments__Group_1__0");
					put(grammarAccess.getArgumentAccess().getGroup_0(), "rule__Argument__Group_0__0");
					put(grammarAccess.getConditionalStatementAccess().getGroup(), "rule__ConditionalStatement__Group__0");
					put(grammarAccess.getConditionalStatementAccess().getGroup_3(), "rule__ConditionalStatement__Group_3__0");
					put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
					put(grammarAccess.getParExpressionAccess().getGroup(), "rule__ParExpression__Group__0");
					put(grammarAccess.getConditionalExpressionAccess().getGroup(), "rule__ConditionalExpression__Group__0");
					put(grammarAccess.getConditionalExpressionAccess().getGroup_1(), "rule__ConditionalExpression__Group_1__0");
					put(grammarAccess.getOrExpressionAccess().getGroup(), "rule__OrExpression__Group__0");
					put(grammarAccess.getOrExpressionAccess().getGroup_1(), "rule__OrExpression__Group_1__0");
					put(grammarAccess.getAndExpressionAccess().getGroup(), "rule__AndExpression__Group__0");
					put(grammarAccess.getAndExpressionAccess().getGroup_1(), "rule__AndExpression__Group_1__0");
					put(grammarAccess.getLogicalExpressionAccess().getGroup(), "rule__LogicalExpression__Group__0");
					put(grammarAccess.getLogicalExpressionAccess().getGroup_1_1(), "rule__LogicalExpression__Group_1_1__0");
					put(grammarAccess.getLogicalExpressionAccess().getGroup_1_1_1(), "rule__LogicalExpression__Group_1_1_1__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_0(), "rule__AdditiveExpression__Group_0__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_0_1(), "rule__AdditiveExpression__Group_0_1__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_1(), "rule__AdditiveExpression__Group_1__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_1_1(), "rule__AdditiveExpression__Group_1_1__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup(), "rule__MultiplicativeExpression__Group__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1(), "rule__MultiplicativeExpression__Group_1__0");
					put(grammarAccess.getPowerExpressionAccess().getGroup(), "rule__PowerExpression__Group__0");
					put(grammarAccess.getPowerExpressionAccess().getGroup_1(), "rule__PowerExpression__Group_1__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_0(), "rule__UnaryExpression__Group_0__0");
					put(grammarAccess.getVectorAccess().getGroup(), "rule__Vector__Group__0");
					put(grammarAccess.getVectorAccess().getGroup_3(), "rule__Vector__Group_3__0");
					put(grammarAccess.getFullyQualifiedSymbolNameAccess().getGroup(), "rule__FullyQualifiedSymbolName__Group__0");
					put(grammarAccess.getFullyQualifiedSymbolNameAccess().getGroup_0(), "rule__FullyQualifiedSymbolName__Group_0__0");
					put(grammarAccess.getFullyQualifiedArgumentNameAccess().getGroup(), "rule__FullyQualifiedArgumentName__Group__0");
					put(grammarAccess.getFullyQualifiedArgumentNameAccess().getGroup_1(), "rule__FullyQualifiedArgumentName__Group_1__0");
					put(grammarAccess.getMclAccess().getObjectsAssignment(), "rule__Mcl__ObjectsAssignment");
					put(grammarAccess.getMclObjectAccess().getModelObjectAssignment_0(), "rule__MclObject__ModelObjectAssignment_0");
					put(grammarAccess.getMclObjectAccess().getParameterObjectAssignment_1(), "rule__MclObject__ParameterObjectAssignment_1");
					put(grammarAccess.getMclObjectAccess().getDataObjectAssignment_2(), "rule__MclObject__DataObjectAssignment_2");
					put(grammarAccess.getMclObjectAccess().getTaskObjectAssignment_3(), "rule__MclObject__TaskObjectAssignment_3");
					put(grammarAccess.getMclObjectAccess().getTelObjectAssignment_4(), "rule__MclObject__TelObjectAssignment_4");
					put(grammarAccess.getModelObjectAccess().getIdentifierAssignment_0(), "rule__ModelObject__IdentifierAssignment_0");
					put(grammarAccess.getModelObjectAccess().getBlocksAssignment_4(), "rule__ModelObject__BlocksAssignment_4");
					put(grammarAccess.getParameterObjectAccess().getIdentifierAssignment_0(), "rule__ParameterObject__IdentifierAssignment_0");
					put(grammarAccess.getParameterObjectAccess().getBlocksAssignment_4(), "rule__ParameterObject__BlocksAssignment_4");
					put(grammarAccess.getDataObjectAccess().getIdentifierAssignment_0(), "rule__DataObject__IdentifierAssignment_0");
					put(grammarAccess.getDataObjectAccess().getBlocksAssignment_4(), "rule__DataObject__BlocksAssignment_4");
					put(grammarAccess.getTaskObjectAccess().getIdentifierAssignment_0(), "rule__TaskObject__IdentifierAssignment_0");
					put(grammarAccess.getTaskObjectAccess().getBlocksAssignment_4(), "rule__TaskObject__BlocksAssignment_4");
					put(grammarAccess.getTELObjectAccess().getIdentifierAssignment_0(), "rule__TELObject__IdentifierAssignment_0");
					put(grammarAccess.getTELObjectAccess().getStatementsAssignment_4(), "rule__TELObject__StatementsAssignment_4");
					put(grammarAccess.getModelObjectBlockAccess().getIndividualVariablesBlockAssignment_0(), "rule__ModelObjectBlock__IndividualVariablesBlockAssignment_0");
					put(grammarAccess.getModelObjectBlockAccess().getModelPredictionBlockAssignment_1(), "rule__ModelObjectBlock__ModelPredictionBlockAssignment_1");
					put(grammarAccess.getModelObjectBlockAccess().getRandomVariableDefinitionBlockAssignment_2(), "rule__ModelObjectBlock__RandomVariableDefinitionBlockAssignment_2");
					put(grammarAccess.getModelObjectBlockAccess().getInputVariablesBlockAssignment_3(), "rule__ModelObjectBlock__InputVariablesBlockAssignment_3");
					put(grammarAccess.getModelObjectBlockAccess().getStructuralParametersBlockAssignment_4(), "rule__ModelObjectBlock__StructuralParametersBlockAssignment_4");
					put(grammarAccess.getModelObjectBlockAccess().getVariabilityParametersBlockAssignment_5(), "rule__ModelObjectBlock__VariabilityParametersBlockAssignment_5");
					put(grammarAccess.getModelObjectBlockAccess().getOutputVariablesBlockAssignment_6(), "rule__ModelObjectBlock__OutputVariablesBlockAssignment_6");
					put(grammarAccess.getModelObjectBlockAccess().getGroupVariablesBlockAssignment_7(), "rule__ModelObjectBlock__GroupVariablesBlockAssignment_7");
					put(grammarAccess.getModelObjectBlockAccess().getObservationBlockAssignment_8(), "rule__ModelObjectBlock__ObservationBlockAssignment_8");
					put(grammarAccess.getModelObjectBlockAccess().getEstimationBlockAssignment_9(), "rule__ModelObjectBlock__EstimationBlockAssignment_9");
					put(grammarAccess.getModelObjectBlockAccess().getSimulationBlockAssignment_10(), "rule__ModelObjectBlock__SimulationBlockAssignment_10");
					put(grammarAccess.getModelObjectBlockAccess().getVerbatimBlockAssignment_11(), "rule__ModelObjectBlock__VerbatimBlockAssignment_11");
					put(grammarAccess.getIndividualVariablesBlockAccess().getIdentifierAssignment_0(), "rule__IndividualVariablesBlock__IdentifierAssignment_0");
					put(grammarAccess.getIndividualVariablesBlockAccess().getStatementsAssignment_2(), "rule__IndividualVariablesBlock__StatementsAssignment_2");
					put(grammarAccess.getModelPredictionBlockAccess().getIdentifierAssignment_0(), "rule__ModelPredictionBlock__IdentifierAssignment_0");
					put(grammarAccess.getModelPredictionBlockAccess().getStatementsAssignment_2(), "rule__ModelPredictionBlock__StatementsAssignment_2");
					put(grammarAccess.getRandomVariableDefinitionBlockAccess().getIdentifierAssignment_0(), "rule__RandomVariableDefinitionBlock__IdentifierAssignment_0");
					put(grammarAccess.getRandomVariableDefinitionBlockAccess().getVariablesAssignment_2(), "rule__RandomVariableDefinitionBlock__VariablesAssignment_2");
					put(grammarAccess.getInputVariablesBlockAccess().getIndentifierAssignment_0(), "rule__InputVariablesBlock__IndentifierAssignment_0");
					put(grammarAccess.getInputVariablesBlockAccess().getVariablesAssignment_2(), "rule__InputVariablesBlock__VariablesAssignment_2");
					put(grammarAccess.getStructuralParametersBlockAccess().getIdentifierAssignment_0(), "rule__StructuralParametersBlock__IdentifierAssignment_0");
					put(grammarAccess.getStructuralParametersBlockAccess().getParametersAssignment_2(), "rule__StructuralParametersBlock__ParametersAssignment_2");
					put(grammarAccess.getVariabilityParametersBlockAccess().getIdentifierAssignment_0(), "rule__VariabilityParametersBlock__IdentifierAssignment_0");
					put(grammarAccess.getVariabilityParametersBlockAccess().getParametersAssignment_2(), "rule__VariabilityParametersBlock__ParametersAssignment_2");
					put(grammarAccess.getOutputVariablesBlockAccess().getIdentifierAssignment_0(), "rule__OutputVariablesBlock__IdentifierAssignment_0");
					put(grammarAccess.getOutputVariablesBlockAccess().getVariablesAssignment_2(), "rule__OutputVariablesBlock__VariablesAssignment_2");
					put(grammarAccess.getGroupVariablesBlockAccess().getIdentifierAssignment_0(), "rule__GroupVariablesBlock__IdentifierAssignment_0");
					put(grammarAccess.getGroupVariablesBlockAccess().getStatementsAssignment_2(), "rule__GroupVariablesBlock__StatementsAssignment_2");
					put(grammarAccess.getObservationBlockAccess().getIdentifierAssignment_0(), "rule__ObservationBlock__IdentifierAssignment_0");
					put(grammarAccess.getObservationBlockAccess().getStatementsAssignment_2(), "rule__ObservationBlock__StatementsAssignment_2");
					put(grammarAccess.getEstimationBlockAccess().getIdentifierAssignment_0(), "rule__EstimationBlock__IdentifierAssignment_0");
					put(grammarAccess.getEstimationBlockAccess().getStatementsAssignment_2(), "rule__EstimationBlock__StatementsAssignment_2");
					put(grammarAccess.getSimulationBlockAccess().getIdentifierAssignment_0(), "rule__SimulationBlock__IdentifierAssignment_0");
					put(grammarAccess.getSimulationBlockAccess().getStatementsAssignment_2(), "rule__SimulationBlock__StatementsAssignment_2");
					put(grammarAccess.getParameterObjectBlockAccess().getStructuralBlockAssignment_0(), "rule__ParameterObjectBlock__StructuralBlockAssignment_0");
					put(grammarAccess.getParameterObjectBlockAccess().getVariabilityBlockAssignment_1(), "rule__ParameterObjectBlock__VariabilityBlockAssignment_1");
					put(grammarAccess.getParameterObjectBlockAccess().getPriorBlockAssignment_2(), "rule__ParameterObjectBlock__PriorBlockAssignment_2");
					put(grammarAccess.getParameterObjectBlockAccess().getVerbatimBlockAssignment_3(), "rule__ParameterObjectBlock__VerbatimBlockAssignment_3");
					put(grammarAccess.getStructuralBlockAccess().getIdentifierAssignment_0(), "rule__StructuralBlock__IdentifierAssignment_0");
					put(grammarAccess.getStructuralBlockAccess().getParametersAssignment_2(), "rule__StructuralBlock__ParametersAssignment_2");
					put(grammarAccess.getVariabilityBlockAccess().getIdentifierAssignment_0(), "rule__VariabilityBlock__IdentifierAssignment_0");
					put(grammarAccess.getVariabilityBlockAccess().getStatementsAssignment_2(), "rule__VariabilityBlock__StatementsAssignment_2");
					put(grammarAccess.getPriorParametersBlockAccess().getIdentifierAssignment_0(), "rule__PriorParametersBlock__IdentifierAssignment_0");
					put(grammarAccess.getPriorParametersBlockAccess().getStatementsAssignment_2(), "rule__PriorParametersBlock__StatementsAssignment_2");
					put(grammarAccess.getDataObjectBlockAccess().getHeaderBlockAssignment_0(), "rule__DataObjectBlock__HeaderBlockAssignment_0");
					put(grammarAccess.getDataObjectBlockAccess().getFileBlockAssignment_1(), "rule__DataObjectBlock__FileBlockAssignment_1");
					put(grammarAccess.getDataObjectBlockAccess().getVerbatimBlockAssignment_2(), "rule__DataObjectBlock__VerbatimBlockAssignment_2");
					put(grammarAccess.getHeaderBlockAccess().getIdentifierAssignment_0(), "rule__HeaderBlock__IdentifierAssignment_0");
					put(grammarAccess.getHeaderBlockAccess().getVariablesAssignment_2(), "rule__HeaderBlock__VariablesAssignment_2");
					put(grammarAccess.getFileBlockAccess().getIdentifierAssignment_0(), "rule__FileBlock__IdentifierAssignment_0");
					put(grammarAccess.getFileBlockAccess().getStatementsAssignment_2(), "rule__FileBlock__StatementsAssignment_2");
					put(grammarAccess.getTaskObjectBlockAccess().getFunctionDeclarationAssignment_0(), "rule__TaskObjectBlock__FunctionDeclarationAssignment_0");
					put(grammarAccess.getTaskObjectBlockAccess().getParameterBlockAssignment_1(), "rule__TaskObjectBlock__ParameterBlockAssignment_1");
					put(grammarAccess.getTaskObjectBlockAccess().getDataBlockAssignment_2(), "rule__TaskObjectBlock__DataBlockAssignment_2");
					put(grammarAccess.getTaskObjectBlockAccess().getModelBlockAssignment_3(), "rule__TaskObjectBlock__ModelBlockAssignment_3");
					put(grammarAccess.getTaskObjectBlockAccess().getVerbatimBlockAssignment_4(), "rule__TaskObjectBlock__VerbatimBlockAssignment_4");
					put(grammarAccess.getParameterBlockAccess().getIdentifierAssignment_0(), "rule__ParameterBlock__IdentifierAssignment_0");
					put(grammarAccess.getParameterBlockAccess().getParametersAssignment_2(), "rule__ParameterBlock__ParametersAssignment_2");
					put(grammarAccess.getDataBlockAccess().getIdentifierAssignment_0(), "rule__DataBlock__IdentifierAssignment_0");
					put(grammarAccess.getDataBlockAccess().getStatementsAssignment_2(), "rule__DataBlock__StatementsAssignment_2");
					put(grammarAccess.getDataBlockStatementAccess().getIgnoreListAssignment_0(), "rule__DataBlockStatement__IgnoreListAssignment_0");
					put(grammarAccess.getDataBlockStatementAccess().getAcceptListAssignment_1(), "rule__DataBlockStatement__AcceptListAssignment_1");
					put(grammarAccess.getDataBlockStatementAccess().getDropListAssignment_2(), "rule__DataBlockStatement__DropListAssignment_2");
					put(grammarAccess.getIgnoreListAccess().getIdentifierAssignment_0(), "rule__IgnoreList__IdentifierAssignment_0");
					put(grammarAccess.getIgnoreListAccess().getExpressionAssignment_4(), "rule__IgnoreList__ExpressionAssignment_4");
					put(grammarAccess.getAcceptListAccess().getIdentifierAssignment_0(), "rule__AcceptList__IdentifierAssignment_0");
					put(grammarAccess.getAcceptListAccess().getExpressionAssignment_4(), "rule__AcceptList__ExpressionAssignment_4");
					put(grammarAccess.getDropListAccess().getIdentifierAssignment_0(), "rule__DropList__IdentifierAssignment_0");
					put(grammarAccess.getDropListAccess().getListAssignment_2(), "rule__DropList__ListAssignment_2");
					put(grammarAccess.getModelBlockAccess().getIdentifierAssignment_0(), "rule__ModelBlock__IdentifierAssignment_0");
					put(grammarAccess.getModelBlockAccess().getStatementsAssignment_2(), "rule__ModelBlock__StatementsAssignment_2");
					put(grammarAccess.getModelBlockStatementAccess().getStatementAssignment_0(), "rule__ModelBlockStatement__StatementAssignment_0");
					put(grammarAccess.getModelBlockStatementAccess().getAddListAssignment_1(), "rule__ModelBlockStatement__AddListAssignment_1");
					put(grammarAccess.getModelBlockStatementAccess().getRemoveListAssignment_2(), "rule__ModelBlockStatement__RemoveListAssignment_2");
					put(grammarAccess.getAddListAccess().getListAssignment_2(), "rule__AddList__ListAssignment_2");
					put(grammarAccess.getRemoveListAccess().getListAssignment_2(), "rule__RemoveList__ListAssignment_2");
					put(grammarAccess.getSymbolListAccess().getSymbolsAssignment_2(), "rule__SymbolList__SymbolsAssignment_2");
					put(grammarAccess.getModelPredictionBlockStatementAccess().getStatementAssignment_0(), "rule__ModelPredictionBlockStatement__StatementAssignment_0");
					put(grammarAccess.getModelPredictionBlockStatementAccess().getOdeBlockAssignment_1(), "rule__ModelPredictionBlockStatement__OdeBlockAssignment_1");
					put(grammarAccess.getModelPredictionBlockStatementAccess().getLibraryBlockAssignment_2(), "rule__ModelPredictionBlockStatement__LibraryBlockAssignment_2");
					put(grammarAccess.getLibraryBlockAccess().getIdentifierAssignment_0(), "rule__LibraryBlock__IdentifierAssignment_0");
					put(grammarAccess.getLibraryBlockAccess().getStatementsAssignment_2(), "rule__LibraryBlock__StatementsAssignment_2");
					put(grammarAccess.getOdeBlockAccess().getIdentifierAssignment_0(), "rule__OdeBlock__IdentifierAssignment_0");
					put(grammarAccess.getOdeBlockAccess().getStatementsAssignment_2(), "rule__OdeBlock__StatementsAssignment_2");
					put(grammarAccess.getGroupVariablesBlockStatementAccess().getStatementAssignment_0(), "rule__GroupVariablesBlockStatement__StatementAssignment_0");
					put(grammarAccess.getGroupVariablesBlockStatementAccess().getMixtureBlockAssignment_1(), "rule__GroupVariablesBlockStatement__MixtureBlockAssignment_1");
					put(grammarAccess.getMixtureBlockAccess().getIdentifierAssignment_0(), "rule__MixtureBlock__IdentifierAssignment_0");
					put(grammarAccess.getMixtureBlockAccess().getStatementsAssignment_2(), "rule__MixtureBlock__StatementsAssignment_2");
					put(grammarAccess.getVariabilityBlockStatementAccess().getParameterAssignment_0(), "rule__VariabilityBlockStatement__ParameterAssignment_0");
					put(grammarAccess.getVariabilityBlockStatementAccess().getBlockBlockAssignment_1(), "rule__VariabilityBlockStatement__BlockBlockAssignment_1");
					put(grammarAccess.getVariabilityBlockStatementAccess().getDiagBlockAssignment_2(), "rule__VariabilityBlockStatement__DiagBlockAssignment_2");
					put(grammarAccess.getVariabilityBlockStatementAccess().getSameBlockAssignment_3(), "rule__VariabilityBlockStatement__SameBlockAssignment_3");
					put(grammarAccess.getBlockBlockAccess().getIdentifierAssignment_0(), "rule__BlockBlock__IdentifierAssignment_0");
					put(grammarAccess.getBlockBlockAccess().getArgumentsAssignment_2(), "rule__BlockBlock__ArgumentsAssignment_2");
					put(grammarAccess.getBlockBlockAccess().getParametersAssignment_4_1(), "rule__BlockBlock__ParametersAssignment_4_1");
					put(grammarAccess.getDiagBlockAccess().getIdentifierAssignment_0(), "rule__DiagBlock__IdentifierAssignment_0");
					put(grammarAccess.getDiagBlockAccess().getArgumentsAssignment_2(), "rule__DiagBlock__ArgumentsAssignment_2");
					put(grammarAccess.getDiagBlockAccess().getParametersAssignment_4_1(), "rule__DiagBlock__ParametersAssignment_4_1");
					put(grammarAccess.getSameBlockAccess().getIdentifierAssignment_0(), "rule__SameBlock__IdentifierAssignment_0");
					put(grammarAccess.getSameBlockAccess().getArgumentsAssignment_2(), "rule__SameBlock__ArgumentsAssignment_2");
					put(grammarAccess.getSameBlockAccess().getParametersAssignment_4_1(), "rule__SameBlock__ParametersAssignment_4_1");
					put(grammarAccess.getFileBlockStatementAccess().getVariableAssignment_0(), "rule__FileBlockStatement__VariableAssignment_0");
					put(grammarAccess.getFileBlockStatementAccess().getInlineBlockAssignment_1(), "rule__FileBlockStatement__InlineBlockAssignment_1");
					put(grammarAccess.getFileBlockStatementAccess().getDesignBlockAssignment_2(), "rule__FileBlockStatement__DesignBlockAssignment_2");
					put(grammarAccess.getFileBlockStatementAccess().getRscriptBlockAssignment_3(), "rule__FileBlockStatement__RscriptBlockAssignment_3");
					put(grammarAccess.getInlineBlockAccess().getIdentifierAssignment_0(), "rule__InlineBlock__IdentifierAssignment_0");
					put(grammarAccess.getInlineBlockAccess().getVariablesAssignment_2(), "rule__InlineBlock__VariablesAssignment_2");
					put(grammarAccess.getInlineBlockAccess().getValuesAssignment_3(), "rule__InlineBlock__ValuesAssignment_3");
					put(grammarAccess.getDesignBlockAccess().getIdentifierAssignment_0(), "rule__DesignBlock__IdentifierAssignment_0");
					put(grammarAccess.getDesignBlockAccess().getStatementsAssignment_2(), "rule__DesignBlock__StatementsAssignment_2");
					put(grammarAccess.getDesignBlockStatementAccess().getIdentifierAssignment_0(), "rule__DesignBlockStatement__IdentifierAssignment_0");
					put(grammarAccess.getDesignBlockStatementAccess().getArgumentsAssignment_1(), "rule__DesignBlockStatement__ArgumentsAssignment_1");
					put(grammarAccess.getDesignBlockStatementAccess().getExpressionAssignment_3(), "rule__DesignBlockStatement__ExpressionAssignment_3");
					put(grammarAccess.getVariableListAccess().getIdentifiersAssignment_1(), "rule__VariableList__IdentifiersAssignment_1");
					put(grammarAccess.getVariableListAccess().getIdentifiersAssignment_2_1(), "rule__VariableList__IdentifiersAssignment_2_1");
					put(grammarAccess.getRScriptBlockAccess().getIdentifierAssignment_0(), "rule__RScriptBlock__IdentifierAssignment_0");
					put(grammarAccess.getRScriptBlockAccess().getVariablesAssignment_2(), "rule__RScriptBlock__VariablesAssignment_2");
					put(grammarAccess.getRScriptBlockStatementAccess().getIdentifierAssignment_0(), "rule__RScriptBlockStatement__IdentifierAssignment_0");
					put(grammarAccess.getRScriptBlockStatementAccess().getValueAssignment_2_0(), "rule__RScriptBlockStatement__ValueAssignment_2_0");
					put(grammarAccess.getRScriptBlockStatementAccess().getObjectAssignment_2_1(), "rule__RScriptBlockStatement__ObjectAssignment_2_1");
					put(grammarAccess.getTaskFunctionDeclarationAccess().getIdentifierAssignment_0(), "rule__TaskFunctionDeclaration__IdentifierAssignment_0");
					put(grammarAccess.getTaskFunctionDeclarationAccess().getFormalArgumentsAssignment_4(), "rule__TaskFunctionDeclaration__FormalArgumentsAssignment_4");
					put(grammarAccess.getTaskFunctionDeclarationAccess().getFunctionBodyAssignment_6(), "rule__TaskFunctionDeclaration__FunctionBodyAssignment_6");
					put(grammarAccess.getTaskFunctionBodyAccess().getBlocksAssignment_2(), "rule__TaskFunctionBody__BlocksAssignment_2");
					put(grammarAccess.getTaskFunctionBlockAccess().getEstimateBlockAssignment_0(), "rule__TaskFunctionBlock__EstimateBlockAssignment_0");
					put(grammarAccess.getTaskFunctionBlockAccess().getSimulateBlockAssignment_1(), "rule__TaskFunctionBlock__SimulateBlockAssignment_1");
					put(grammarAccess.getTaskFunctionBlockAccess().getExecuteBlockAssignment_2(), "rule__TaskFunctionBlock__ExecuteBlockAssignment_2");
					put(grammarAccess.getEstimateTaskAccess().getIdentifierAssignment_0(), "rule__EstimateTask__IdentifierAssignment_0");
					put(grammarAccess.getEstimateTaskAccess().getStatementsAssignment_2(), "rule__EstimateTask__StatementsAssignment_2");
					put(grammarAccess.getSimulateTaskAccess().getIdentifierAssignment_0(), "rule__SimulateTask__IdentifierAssignment_0");
					put(grammarAccess.getSimulateTaskAccess().getStatementsAssignment_2(), "rule__SimulateTask__StatementsAssignment_2");
					put(grammarAccess.getExecuteTaskAccess().getIdentifierAssignment_0(), "rule__ExecuteTask__IdentifierAssignment_0");
					put(grammarAccess.getExecuteTaskAccess().getStatementsAssignment_2(), "rule__ExecuteTask__StatementsAssignment_2");
					put(grammarAccess.getFormalArgumentsAccess().getIdentifiersAssignment_0(), "rule__FormalArguments__IdentifiersAssignment_0");
					put(grammarAccess.getFormalArgumentsAccess().getIdentifiersAssignment_1_1(), "rule__FormalArguments__IdentifiersAssignment_1_1");
					put(grammarAccess.getFunctionCallAccess().getIdentifierAssignment_0(), "rule__FunctionCall__IdentifierAssignment_0");
					put(grammarAccess.getFunctionCallAccess().getArgumentsAssignment_2(), "rule__FunctionCall__ArgumentsAssignment_2");
					put(grammarAccess.getBlockStatementAccess().getSymbolAssignment_0(), "rule__BlockStatement__SymbolAssignment_0");
					put(grammarAccess.getBlockStatementAccess().getFunctionCallAssignment_1(), "rule__BlockStatement__FunctionCallAssignment_1");
					put(grammarAccess.getBlockStatementAccess().getStatementAssignment_2(), "rule__BlockStatement__StatementAssignment_2");
					put(grammarAccess.getBlockStatementAccess().getVerbatimBlockAssignment_3(), "rule__BlockStatement__VerbatimBlockAssignment_3");
					put(grammarAccess.getVerbatimBlockAccess().getIdentifierAssignment_0(), "rule__VerbatimBlock__IdentifierAssignment_0");
					put(grammarAccess.getVerbatimBlockAccess().getBlockAssignment_2_0(), "rule__VerbatimBlock__BlockAssignment_2_0");
					put(grammarAccess.getVerbatimBlockAccess().getExternalCodeAssignment_2_1(), "rule__VerbatimBlock__ExternalCodeAssignment_2_1");
					put(grammarAccess.getTargetBlockAccess().getIdentifierAssignment_0(), "rule__TargetBlock__IdentifierAssignment_0");
					put(grammarAccess.getTargetBlockAccess().getArgumentsAssignment_1_1(), "rule__TargetBlock__ArgumentsAssignment_1_1");
					put(grammarAccess.getTargetBlockAccess().getExternalCodeAssignment_3(), "rule__TargetBlock__ExternalCodeAssignment_3");
					put(grammarAccess.getSymbolModificationAccess().getIdentifierAssignment_0(), "rule__SymbolModification__IdentifierAssignment_0");
					put(grammarAccess.getSymbolModificationAccess().getListAssignment_1_1(), "rule__SymbolModification__ListAssignment_1_1");
					put(grammarAccess.getParameterDeclarationAccess().getIdentifierAssignment_0(), "rule__ParameterDeclaration__IdentifierAssignment_0");
					put(grammarAccess.getParameterDeclarationAccess().getListAssignment_1_1(), "rule__ParameterDeclaration__ListAssignment_1_1");
					put(grammarAccess.getSymbolDeclarationAccess().getIdentifierAssignment_0_0(), "rule__SymbolDeclaration__IdentifierAssignment_0_0");
					put(grammarAccess.getSymbolDeclarationAccess().getExpressionAssignment_0_1_0_1(), "rule__SymbolDeclaration__ExpressionAssignment_0_1_0_1");
					put(grammarAccess.getSymbolDeclarationAccess().getRandomListAssignment_0_1_1(), "rule__SymbolDeclaration__RandomListAssignment_0_1_1");
					put(grammarAccess.getSymbolDeclarationAccess().getFunctionAssignment_1_0(), "rule__SymbolDeclaration__FunctionAssignment_1_0");
					put(grammarAccess.getSymbolDeclarationAccess().getIdentifierAssignment_1_2(), "rule__SymbolDeclaration__IdentifierAssignment_1_2");
					put(grammarAccess.getSymbolDeclarationAccess().getRandomListAssignment_1_4(), "rule__SymbolDeclaration__RandomListAssignment_1_4");
					put(grammarAccess.getEnumTypeAccess().getCategoricalAssignment_0(), "rule__EnumType__CategoricalAssignment_0");
					put(grammarAccess.getEnumTypeAccess().getContinuousAssignment_1(), "rule__EnumType__ContinuousAssignment_1");
					put(grammarAccess.getEnumTypeAccess().getCovariateAssignment_2(), "rule__EnumType__CovariateAssignment_2");
					put(grammarAccess.getEnumTypeAccess().getDistributionAssignment_3(), "rule__EnumType__DistributionAssignment_3");
					put(grammarAccess.getEnumTypeAccess().getLevelAssignment_4(), "rule__EnumType__LevelAssignment_4");
					put(grammarAccess.getEnumTypeAccess().getLikelyhoodAssignment_5(), "rule__EnumType__LikelyhoodAssignment_5");
					put(grammarAccess.getEnumTypeAccess().getMissingAssignment_6(), "rule__EnumType__MissingAssignment_6");
					put(grammarAccess.getMissingAccess().getIdentifierAssignment(), "rule__Missing__IdentifierAssignment");
					put(grammarAccess.getLikelyhoodAccess().getIdentifierAssignment(), "rule__Likelyhood__IdentifierAssignment");
					put(grammarAccess.getLevelTypeAccess().getMdvAssignment_0(), "rule__LevelType__MdvAssignment_0");
					put(grammarAccess.getLevelTypeAccess().getIdAssignment_1(), "rule__LevelType__IdAssignment_1");
					put(grammarAccess.getLevelTypeAccess().getDvAssignment_2(), "rule__LevelType__DvAssignment_2");
					put(grammarAccess.getLevelTypeAccess().getIdvAssignment_3(), "rule__LevelType__IdvAssignment_3");
					put(grammarAccess.getCategoricalAccess().getIdentifierAssignment_0(), "rule__Categorical__IdentifierAssignment_0");
					put(grammarAccess.getCategoricalAccess().getArgumentsAssignment_1_1(), "rule__Categorical__ArgumentsAssignment_1_1");
					put(grammarAccess.getContinuousAccess().getIdentifierAssignment(), "rule__Continuous__IdentifierAssignment");
					put(grammarAccess.getCovariateAccess().getIdentifierAssignment(), "rule__Covariate__IdentifierAssignment");
					put(grammarAccess.getDistributionAccess().getNormalAssignment_0_1(), "rule__Distribution__NormalAssignment_0_1");
					put(grammarAccess.getDistributionAccess().getBinomialAssignment_1(), "rule__Distribution__BinomialAssignment_1");
					put(grammarAccess.getDistributionAccess().getPoissonAssignment_2(), "rule__Distribution__PoissonAssignment_2");
					put(grammarAccess.getDistributionAccess().getStudent_tAssignment_3(), "rule__Distribution__Student_tAssignment_3");
					put(grammarAccess.getDistributionAccess().getMvnormalAssignment_4(), "rule__Distribution__MvnormalAssignment_4");
					put(grammarAccess.getAnyExpressionAccess().getExpressionAssignment_0(), "rule__AnyExpression__ExpressionAssignment_0");
					put(grammarAccess.getAnyExpressionAccess().getListAssignment_1(), "rule__AnyExpression__ListAssignment_1");
					put(grammarAccess.getAnyExpressionAccess().getOdeListAssignment_2(), "rule__AnyExpression__OdeListAssignment_2");
					put(grammarAccess.getAnyExpressionAccess().getTypeAssignment_3(), "rule__AnyExpression__TypeAssignment_3");
					put(grammarAccess.getExpressionAccess().getConditionalExpressionAssignment(), "rule__Expression__ConditionalExpressionAssignment");
					put(grammarAccess.getListAccess().getArgumentsAssignment_2(), "rule__List__ArgumentsAssignment_2");
					put(grammarAccess.getOdeListAccess().getArgumentsAssignment_2(), "rule__OdeList__ArgumentsAssignment_2");
					put(grammarAccess.getRandomListAccess().getArgumentsAssignment_2(), "rule__RandomList__ArgumentsAssignment_2");
					put(grammarAccess.getArgumentsAccess().getArgumentsAssignment_0(), "rule__Arguments__ArgumentsAssignment_0");
					put(grammarAccess.getArgumentsAccess().getArgumentsAssignment_1_1(), "rule__Arguments__ArgumentsAssignment_1_1");
					put(grammarAccess.getArgumentAccess().getIdentifierAssignment_0_0(), "rule__Argument__IdentifierAssignment_0_0");
					put(grammarAccess.getArgumentAccess().getExpressionAssignment_0_2(), "rule__Argument__ExpressionAssignment_0_2");
					put(grammarAccess.getArgumentAccess().getExpressionAssignment_1(), "rule__Argument__ExpressionAssignment_1");
					put(grammarAccess.getConditionalStatementAccess().getParExpressionAssignment_1(), "rule__ConditionalStatement__ParExpressionAssignment_1");
					put(grammarAccess.getConditionalStatementAccess().getIfStatementAssignment_2_0(), "rule__ConditionalStatement__IfStatementAssignment_2_0");
					put(grammarAccess.getConditionalStatementAccess().getIfBlockAssignment_2_1(), "rule__ConditionalStatement__IfBlockAssignment_2_1");
					put(grammarAccess.getConditionalStatementAccess().getElseStatementAssignment_3_1_0(), "rule__ConditionalStatement__ElseStatementAssignment_3_1_0");
					put(grammarAccess.getConditionalStatementAccess().getElseBlockAssignment_3_1_1(), "rule__ConditionalStatement__ElseBlockAssignment_3_1_1");
					put(grammarAccess.getBlockAccess().getStatementsAssignment_2(), "rule__Block__StatementsAssignment_2");
					put(grammarAccess.getParExpressionAccess().getExpressionAssignment_1(), "rule__ParExpression__ExpressionAssignment_1");
					put(grammarAccess.getConditionalExpressionAccess().getExpressionAssignment_0(), "rule__ConditionalExpression__ExpressionAssignment_0");
					put(grammarAccess.getConditionalExpressionAccess().getExpression1Assignment_1_1(), "rule__ConditionalExpression__Expression1Assignment_1_1");
					put(grammarAccess.getConditionalExpressionAccess().getExpression2Assignment_1_3(), "rule__ConditionalExpression__Expression2Assignment_1_3");
					put(grammarAccess.getOrExpressionAccess().getExpressionAssignment_0(), "rule__OrExpression__ExpressionAssignment_0");
					put(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_0(), "rule__OrExpression__OperatorAssignment_1_0");
					put(grammarAccess.getOrExpressionAccess().getExpressionAssignment_1_1(), "rule__OrExpression__ExpressionAssignment_1_1");
					put(grammarAccess.getAndExpressionAccess().getExpressionAssignment_0(), "rule__AndExpression__ExpressionAssignment_0");
					put(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_0(), "rule__AndExpression__OperatorAssignment_1_0");
					put(grammarAccess.getAndExpressionAccess().getExpressionAssignment_1_1(), "rule__AndExpression__ExpressionAssignment_1_1");
					put(grammarAccess.getLogicalExpressionAccess().getNegationAssignment_0(), "rule__LogicalExpression__NegationAssignment_0");
					put(grammarAccess.getLogicalExpressionAccess().getBooleanAssignment_1_0(), "rule__LogicalExpression__BooleanAssignment_1_0");
					put(grammarAccess.getLogicalExpressionAccess().getExpressionAssignment_1_1_0(), "rule__LogicalExpression__ExpressionAssignment_1_1_0");
					put(grammarAccess.getLogicalExpressionAccess().getOperatorAssignment_1_1_1_0(), "rule__LogicalExpression__OperatorAssignment_1_1_1_0");
					put(grammarAccess.getLogicalExpressionAccess().getExpressionAssignment_1_1_1_1(), "rule__LogicalExpression__ExpressionAssignment_1_1_1_1");
					put(grammarAccess.getAdditiveExpressionAccess().getExpressionAssignment_0_0(), "rule__AdditiveExpression__ExpressionAssignment_0_0");
					put(grammarAccess.getAdditiveExpressionAccess().getOperatorAssignment_0_1_0(), "rule__AdditiveExpression__OperatorAssignment_0_1_0");
					put(grammarAccess.getAdditiveExpressionAccess().getExpressionAssignment_0_1_1(), "rule__AdditiveExpression__ExpressionAssignment_0_1_1");
					put(grammarAccess.getAdditiveExpressionAccess().getStringAssignment_1_0(), "rule__AdditiveExpression__StringAssignment_1_0");
					put(grammarAccess.getAdditiveExpressionAccess().getOperatorAssignment_1_1_0(), "rule__AdditiveExpression__OperatorAssignment_1_1_0");
					put(grammarAccess.getAdditiveExpressionAccess().getStringAssignment_1_1_1(), "rule__AdditiveExpression__StringAssignment_1_1_1");
					put(grammarAccess.getMultiplicativeExpressionAccess().getExpressionAssignment_0(), "rule__MultiplicativeExpression__ExpressionAssignment_0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getOperatorAssignment_1_0(), "rule__MultiplicativeExpression__OperatorAssignment_1_0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getExpressionAssignment_1_1(), "rule__MultiplicativeExpression__ExpressionAssignment_1_1");
					put(grammarAccess.getPowerExpressionAccess().getExpressionAssignment_0(), "rule__PowerExpression__ExpressionAssignment_0");
					put(grammarAccess.getPowerExpressionAccess().getOperatorAssignment_1_0(), "rule__PowerExpression__OperatorAssignment_1_0");
					put(grammarAccess.getPowerExpressionAccess().getExpressionAssignment_1_1(), "rule__PowerExpression__ExpressionAssignment_1_1");
					put(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_0_0(), "rule__UnaryExpression__OperatorAssignment_0_0");
					put(grammarAccess.getUnaryExpressionAccess().getExpressionAssignment_0_1(), "rule__UnaryExpression__ExpressionAssignment_0_1");
					put(grammarAccess.getUnaryExpressionAccess().getParExpressionAssignment_1(), "rule__UnaryExpression__ParExpressionAssignment_1");
					put(grammarAccess.getUnaryExpressionAccess().getPrimaryAssignment_2(), "rule__UnaryExpression__PrimaryAssignment_2");
					put(grammarAccess.getPrimaryAccess().getFunctionCallAssignment_0(), "rule__Primary__FunctionCallAssignment_0");
					put(grammarAccess.getPrimaryAccess().getNumberAssignment_1(), "rule__Primary__NumberAssignment_1");
					put(grammarAccess.getPrimaryAccess().getSymbolAssignment_2(), "rule__Primary__SymbolAssignment_2");
					put(grammarAccess.getPrimaryAccess().getAttributeAssignment_3(), "rule__Primary__AttributeAssignment_3");
					put(grammarAccess.getPrimaryAccess().getVectorAssignment_4(), "rule__Primary__VectorAssignment_4");
					put(grammarAccess.getVectorAccess().getIdentifierAssignment_0(), "rule__Vector__IdentifierAssignment_0");
					put(grammarAccess.getVectorAccess().getValuesAssignment_2(), "rule__Vector__ValuesAssignment_2");
					put(grammarAccess.getVectorAccess().getValuesAssignment_3_1(), "rule__Vector__ValuesAssignment_3_1");
					put(grammarAccess.getFullyQualifiedSymbolNameAccess().getObjectAssignment_0_0(), "rule__FullyQualifiedSymbolName__ObjectAssignment_0_0");
					put(grammarAccess.getFullyQualifiedSymbolNameAccess().getIdentifierAssignment_1(), "rule__FullyQualifiedSymbolName__IdentifierAssignment_1");
					put(grammarAccess.getFullyQualifiedArgumentNameAccess().getParentAssignment_0(), "rule__FullyQualifiedArgumentName__ParentAssignment_0");
					put(grammarAccess.getFullyQualifiedArgumentNameAccess().getIdentifierAssignment_1_1(), "rule__FullyQualifiedArgumentName__IdentifierAssignment_1_1");
					put(grammarAccess.getObjectNameAccess().getNameAssignment(), "rule__ObjectName__NameAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.ddmore.mdl.ui.contentassist.antlr.internal.InternalMdlParser typedParser = (org.ddmore.mdl.ui.contentassist.antlr.internal.InternalMdlParser) parser;
			typedParser.entryRuleMcl();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public MdlGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MdlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
