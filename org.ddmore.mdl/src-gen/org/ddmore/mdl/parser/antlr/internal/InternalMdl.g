/*
* generated by Xtext
*/
grammar InternalMdl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.ddmore.mdl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.ddmore.mdl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.ddmore.mdl.services.MdlGrammarAccess;

}

@parser::members {

 	private MdlGrammarAccess grammarAccess;
 	
    public InternalMdlParser(TokenStream input, MdlGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "mcl";	
   	}
   	
   	@Override
   	protected MdlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRulemcl
entryRulemcl returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getMclRule()); }
	 iv_rulemcl=rulemcl 
	 { $current=$iv_rulemcl.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule mcl
rulemcl returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getMclAccess().getObjectsMcl_objParserRuleCall_0()); 
	    }
		lv_objects_0_0=rulemcl_obj		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMclRule());
	        }
       		add(
       			$current, 
       			"objects",
        		lv_objects_0_0, 
        		"mcl_obj");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulemcl_obj
entryRulemcl_obj returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMcl_objRule()); }
	 iv_rulemcl_obj=rulemcl_obj 
	 { $current=$iv_rulemcl_obj.current; } 
	 EOF 
;

// Rule mcl_obj
rulemcl_obj returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMcl_objAccess().getModel_objModel_objParserRuleCall_0_0()); 
	    }
		lv_model_obj_0_0=rulemodel_obj		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMcl_objRule());
	        }
       		set(
       			$current, 
       			"model_obj",
        		lv_model_obj_0_0, 
        		"model_obj");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMcl_objAccess().getParam_objParam_objParserRuleCall_1_0()); 
	    }
		lv_param_obj_1_0=ruleparam_obj		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMcl_objRule());
	        }
       		set(
       			$current, 
       			"param_obj",
        		lv_param_obj_1_0, 
        		"param_obj");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMcl_objAccess().getData_objData_objParserRuleCall_2_0()); 
	    }
		lv_data_obj_2_0=ruledata_obj		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMcl_objRule());
	        }
       		set(
       			$current, 
       			"data_obj",
        		lv_data_obj_2_0, 
        		"data_obj");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMcl_objAccess().getTask_objTask_objParserRuleCall_3_0()); 
	    }
		lv_task_obj_3_0=ruletask_obj		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMcl_objRule());
	        }
       		set(
       			$current, 
       			"task_obj",
        		lv_task_obj_3_0, 
        		"task_obj");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMcl_objAccess().getTel_objTel_objParserRuleCall_4_0()); 
	    }
		lv_tel_obj_4_0=ruletel_obj		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMcl_objRule());
	        }
       		set(
       			$current, 
       			"tel_obj",
        		lv_tel_obj_4_0, 
        		"tel_obj");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulemodel_obj
entryRulemodel_obj returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModel_objRule()); }
	 iv_rulemodel_obj=rulemodel_obj 
	 { $current=$iv_rulemodel_obj.current; } 
	 EOF 
;

// Rule model_obj
rulemodel_obj returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=RULE_ID
		{
			newLeafNode(lv_identifier_0_0, grammarAccess.getModel_objAccess().getIdentifierIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModel_objRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"identifier",
        		lv_identifier_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModel_objAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='mdlobj' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getModel_objAccess().getMdlobjKeyword_2());
    }
this_BEGIN_3=RULE_BEGIN
    { 
    newLeafNode(this_BEGIN_3, grammarAccess.getModel_objAccess().getBEGINTerminalRuleCall_3()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModel_objAccess().getBlocksModel_obj_blockParserRuleCall_4_0()); 
	    }
		lv_blocks_4_0=rulemodel_obj_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModel_objRule());
	        }
       		add(
       			$current, 
       			"blocks",
        		lv_blocks_4_0, 
        		"model_obj_block");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_END_5=RULE_END
    { 
    newLeafNode(this_END_5, grammarAccess.getModel_objAccess().getENDTerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuleparam_obj
entryRuleparam_obj returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParam_objRule()); }
	 iv_ruleparam_obj=ruleparam_obj 
	 { $current=$iv_ruleparam_obj.current; } 
	 EOF 
;

// Rule param_obj
ruleparam_obj returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=RULE_ID
		{
			newLeafNode(lv_identifier_0_0, grammarAccess.getParam_objAccess().getIdentifierIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParam_objRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"identifier",
        		lv_identifier_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParam_objAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='parobj' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParam_objAccess().getParobjKeyword_2());
    }
this_BEGIN_3=RULE_BEGIN
    { 
    newLeafNode(this_BEGIN_3, grammarAccess.getParam_objAccess().getBEGINTerminalRuleCall_3()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParam_objAccess().getBlocksParam_obj_blockParserRuleCall_4_0()); 
	    }
		lv_blocks_4_0=ruleparam_obj_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParam_objRule());
	        }
       		add(
       			$current, 
       			"blocks",
        		lv_blocks_4_0, 
        		"param_obj_block");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_END_5=RULE_END
    { 
    newLeafNode(this_END_5, grammarAccess.getParam_objAccess().getENDTerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuledata_obj
entryRuledata_obj returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getData_objRule()); }
	 iv_ruledata_obj=ruledata_obj 
	 { $current=$iv_ruledata_obj.current; } 
	 EOF 
;

// Rule data_obj
ruledata_obj returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=RULE_ID
		{
			newLeafNode(lv_identifier_0_0, grammarAccess.getData_objAccess().getIdentifierIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getData_objRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"identifier",
        		lv_identifier_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getData_objAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='dataobj' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getData_objAccess().getDataobjKeyword_2());
    }
this_BEGIN_3=RULE_BEGIN
    { 
    newLeafNode(this_BEGIN_3, grammarAccess.getData_objAccess().getBEGINTerminalRuleCall_3()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getData_objAccess().getBlocksData_obj_blockParserRuleCall_4_0()); 
	    }
		lv_blocks_4_0=ruledata_obj_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getData_objRule());
	        }
       		add(
       			$current, 
       			"blocks",
        		lv_blocks_4_0, 
        		"data_obj_block");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_END_5=RULE_END
    { 
    newLeafNode(this_END_5, grammarAccess.getData_objAccess().getENDTerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuletask_obj
entryRuletask_obj returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTask_objRule()); }
	 iv_ruletask_obj=ruletask_obj 
	 { $current=$iv_ruletask_obj.current; } 
	 EOF 
;

// Rule task_obj
ruletask_obj returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=RULE_ID
		{
			newLeafNode(lv_identifier_0_0, grammarAccess.getTask_objAccess().getIdentifierIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTask_objRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"identifier",
        		lv_identifier_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTask_objAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='taskobj' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTask_objAccess().getTaskobjKeyword_2());
    }
this_BEGIN_3=RULE_BEGIN
    { 
    newLeafNode(this_BEGIN_3, grammarAccess.getTask_objAccess().getBEGINTerminalRuleCall_3()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTask_objAccess().getBlocksTask_obj_blockParserRuleCall_4_0()); 
	    }
		lv_blocks_4_0=ruletask_obj_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTask_objRule());
	        }
       		add(
       			$current, 
       			"blocks",
        		lv_blocks_4_0, 
        		"task_obj_block");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_END_5=RULE_END
    { 
    newLeafNode(this_END_5, grammarAccess.getTask_objAccess().getENDTerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuletel_obj
entryRuletel_obj returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTel_objRule()); }
	 iv_ruletel_obj=ruletel_obj 
	 { $current=$iv_ruletel_obj.current; } 
	 EOF 
;

// Rule tel_obj
ruletel_obj returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=RULE_ID
		{
			newLeafNode(lv_identifier_0_0, grammarAccess.getTel_objAccess().getIdentifierIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTel_objRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"identifier",
        		lv_identifier_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTel_objAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='telobj' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTel_objAccess().getTelobjKeyword_2());
    }
this_BEGIN_3=RULE_BEGIN
    { 
    newLeafNode(this_BEGIN_3, grammarAccess.getTel_objAccess().getBEGINTerminalRuleCall_3()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTel_objAccess().getBlocksBlock_statementParserRuleCall_4_0()); 
	    }
		lv_blocks_4_0=ruleblock_statement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTel_objRule());
	        }
       		add(
       			$current, 
       			"blocks",
        		lv_blocks_4_0, 
        		"block_statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_END_5=RULE_END
    { 
    newLeafNode(this_END_5, grammarAccess.getTel_objAccess().getENDTerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRulemodel_obj_block
entryRulemodel_obj_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModel_obj_blockRule()); }
	 iv_rulemodel_obj_block=rulemodel_obj_block 
	 { $current=$iv_rulemodel_obj_block.current; } 
	 EOF 
;

// Rule model_obj_block
rulemodel_obj_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModel_obj_blockAccess().getIndividual_model_obj_blockIndividual_model_obj_blockParserRuleCall_0_0()); 
	    }
		lv_individual_model_obj_block_0_0=ruleindividual_model_obj_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModel_obj_blockRule());
	        }
       		set(
       			$current, 
       			"individual_model_obj_block",
        		lv_individual_model_obj_block_0_0, 
        		"individual_model_obj_block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModel_obj_blockAccess().getModel_prediction_obj_blockModel_prediction_obj_blockParserRuleCall_1_0()); 
	    }
		lv_model_prediction_obj_block_1_0=rulemodel_prediction_obj_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModel_obj_blockRule());
	        }
       		set(
       			$current, 
       			"model_prediction_obj_block",
        		lv_model_prediction_obj_block_1_0, 
        		"model_prediction_obj_block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModel_obj_blockAccess().getRandom_variable_definition_blockRandom_variable_definition_blockParserRuleCall_2_0()); 
	    }
		lv_random_variable_definition_block_2_0=rulerandom_variable_definition_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModel_obj_blockRule());
	        }
       		set(
       			$current, 
       			"random_variable_definition_block",
        		lv_random_variable_definition_block_2_0, 
        		"random_variable_definition_block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModel_obj_blockAccess().getInput_variables_blockInput_variables_blockParserRuleCall_3_0()); 
	    }
		lv_input_variables_block_3_0=ruleinput_variables_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModel_obj_blockRule());
	        }
       		set(
       			$current, 
       			"input_variables_block",
        		lv_input_variables_block_3_0, 
        		"input_variables_block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModel_obj_blockAccess().getStructural_parameters_blockStructural_parameters_blockParserRuleCall_4_0()); 
	    }
		lv_structural_parameters_block_4_0=rulestructural_parameters_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModel_obj_blockRule());
	        }
       		set(
       			$current, 
       			"structural_parameters_block",
        		lv_structural_parameters_block_4_0, 
        		"structural_parameters_block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModel_obj_blockAccess().getVariability_parameters_blockVariability_parameters_blockParserRuleCall_5_0()); 
	    }
		lv_variability_parameters_block_5_0=rulevariability_parameters_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModel_obj_blockRule());
	        }
       		set(
       			$current, 
       			"variability_parameters_block",
        		lv_variability_parameters_block_5_0, 
        		"variability_parameters_block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModel_obj_blockAccess().getOutput_variables_blockOutput_variables_blockParserRuleCall_6_0()); 
	    }
		lv_output_variables_block_6_0=ruleoutput_variables_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModel_obj_blockRule());
	        }
       		set(
       			$current, 
       			"output_variables_block",
        		lv_output_variables_block_6_0, 
        		"output_variables_block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModel_obj_blockAccess().getGroup_variablesGroup_variablesParserRuleCall_7_0()); 
	    }
		lv_group_variables_7_0=rulegroup_variables		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModel_obj_blockRule());
	        }
       		set(
       			$current, 
       			"group_variables",
        		lv_group_variables_7_0, 
        		"group_variables");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModel_obj_blockAccess().getObservation_blockObservation_blockParserRuleCall_8_0()); 
	    }
		lv_observation_block_8_0=ruleobservation_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModel_obj_blockRule());
	        }
       		set(
       			$current, 
       			"observation_block",
        		lv_observation_block_8_0, 
        		"observation_block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModel_obj_blockAccess().getEstimation_blockEstimation_blockParserRuleCall_9_0()); 
	    }
		lv_estimation_block_9_0=ruleestimation_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModel_obj_blockRule());
	        }
       		set(
       			$current, 
       			"estimation_block",
        		lv_estimation_block_9_0, 
        		"estimation_block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModel_obj_blockAccess().getSimulation_blockSimulation_blockParserRuleCall_10_0()); 
	    }
		lv_simulation_block_10_0=rulesimulation_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModel_obj_blockRule());
	        }
       		set(
       			$current, 
       			"simulation_block",
        		lv_simulation_block_10_0, 
        		"simulation_block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleindividual_model_obj_block
entryRuleindividual_model_obj_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndividual_model_obj_blockRule()); }
	 iv_ruleindividual_model_obj_block=ruleindividual_model_obj_block 
	 { $current=$iv_ruleindividual_model_obj_block.current; } 
	 EOF 
;

// Rule individual_model_obj_block
ruleindividual_model_obj_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'INDIVIDUAL_VARIABLES' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getIndividual_model_obj_blockAccess().getIdentifierINDIVIDUAL_VARIABLESKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIndividual_model_obj_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "INDIVIDUAL_VARIABLES");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIndividual_model_obj_blockAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndividual_model_obj_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulemodel_prediction_obj_block
entryRulemodel_prediction_obj_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModel_prediction_obj_blockRule()); }
	 iv_rulemodel_prediction_obj_block=rulemodel_prediction_obj_block 
	 { $current=$iv_rulemodel_prediction_obj_block.current; } 
	 EOF 
;

// Rule model_prediction_obj_block
rulemodel_prediction_obj_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'MODEL_PREDICTION' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getModel_prediction_obj_blockAccess().getIdentifierMODEL_PREDICTIONKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModel_prediction_obj_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "MODEL_PREDICTION");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModel_prediction_obj_blockAccess().getBlockModel_blockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=rulemodel_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModel_prediction_obj_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"model_block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulerandom_variable_definition_block
entryRulerandom_variable_definition_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRandom_variable_definition_blockRule()); }
	 iv_rulerandom_variable_definition_block=rulerandom_variable_definition_block 
	 { $current=$iv_rulerandom_variable_definition_block.current; } 
	 EOF 
;

// Rule random_variable_definition_block
rulerandom_variable_definition_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'RANDOM_VARIABLE_DEFINITION' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getRandom_variable_definition_blockAccess().getIdentifierRANDOM_VARIABLE_DEFINITIONKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRandom_variable_definition_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "RANDOM_VARIABLE_DEFINITION");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRandom_variable_definition_blockAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandom_variable_definition_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleinput_variables_block
entryRuleinput_variables_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInput_variables_blockRule()); }
	 iv_ruleinput_variables_block=ruleinput_variables_block 
	 { $current=$iv_ruleinput_variables_block.current; } 
	 EOF 
;

// Rule input_variables_block
ruleinput_variables_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_indentifier_0_0=	'INPUT_VARIABLES' 
    {
        newLeafNode(lv_indentifier_0_0, grammarAccess.getInput_variables_blockAccess().getIndentifierINPUT_VARIABLESKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInput_variables_blockRule());
	        }
       		setWithLastConsumed($current, "indentifier", lv_indentifier_0_0, "INPUT_VARIABLES");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInput_variables_blockAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInput_variables_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulestructural_parameters_block
entryRulestructural_parameters_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructural_parameters_blockRule()); }
	 iv_rulestructural_parameters_block=rulestructural_parameters_block 
	 { $current=$iv_rulestructural_parameters_block.current; } 
	 EOF 
;

// Rule structural_parameters_block
rulestructural_parameters_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'STRUCTURAL_PARAMETERS' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getStructural_parameters_blockAccess().getIdentifierSTRUCTURAL_PARAMETERSKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructural_parameters_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "STRUCTURAL_PARAMETERS");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStructural_parameters_blockAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructural_parameters_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulevariability_parameters_block
entryRulevariability_parameters_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariability_parameters_blockRule()); }
	 iv_rulevariability_parameters_block=rulevariability_parameters_block 
	 { $current=$iv_rulevariability_parameters_block.current; } 
	 EOF 
;

// Rule variability_parameters_block
rulevariability_parameters_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'VARIABILITY_PARAMETERS' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getVariability_parameters_blockAccess().getIdentifierVARIABILITY_PARAMETERSKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariability_parameters_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "VARIABILITY_PARAMETERS");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariability_parameters_blockAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariability_parameters_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleoutput_variables_block
entryRuleoutput_variables_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutput_variables_blockRule()); }
	 iv_ruleoutput_variables_block=ruleoutput_variables_block 
	 { $current=$iv_ruleoutput_variables_block.current; } 
	 EOF 
;

// Rule output_variables_block
ruleoutput_variables_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'OUTPUT_VARIABLES' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getOutput_variables_blockAccess().getIdentifierOUTPUT_VARIABLESKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutput_variables_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "OUTPUT_VARIABLES");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOutput_variables_blockAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutput_variables_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulegroup_variables
entryRulegroup_variables returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGroup_variablesRule()); }
	 iv_rulegroup_variables=rulegroup_variables 
	 { $current=$iv_rulegroup_variables.current; } 
	 EOF 
;

// Rule group_variables
rulegroup_variables returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'GROUP_VARIABLES' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getGroup_variablesAccess().getIdentifierGROUP_VARIABLESKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroup_variablesRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "GROUP_VARIABLES");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGroup_variablesAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroup_variablesRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleobservation_block
entryRuleobservation_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObservation_blockRule()); }
	 iv_ruleobservation_block=ruleobservation_block 
	 { $current=$iv_ruleobservation_block.current; } 
	 EOF 
;

// Rule observation_block
ruleobservation_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'OBSERVATION' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getObservation_blockAccess().getIdentifierOBSERVATIONKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObservation_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "OBSERVATION");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getObservation_blockAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObservation_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleestimation_block
entryRuleestimation_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEstimation_blockRule()); }
	 iv_ruleestimation_block=ruleestimation_block 
	 { $current=$iv_ruleestimation_block.current; } 
	 EOF 
;

// Rule estimation_block
ruleestimation_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'ESTIMATION' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getEstimation_blockAccess().getIdentifierESTIMATIONKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEstimation_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "ESTIMATION");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEstimation_blockAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEstimation_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulesimulation_block
entryRulesimulation_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimulation_blockRule()); }
	 iv_rulesimulation_block=rulesimulation_block 
	 { $current=$iv_rulesimulation_block.current; } 
	 EOF 
;

// Rule simulation_block
rulesimulation_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'SIMULATION' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getSimulation_blockAccess().getIdentifierSIMULATIONKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimulation_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "SIMULATION");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSimulation_blockAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimulation_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleparam_obj_block
entryRuleparam_obj_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParam_obj_blockRule()); }
	 iv_ruleparam_obj_block=ruleparam_obj_block 
	 { $current=$iv_ruleparam_obj_block.current; } 
	 EOF 
;

// Rule param_obj_block
ruleparam_obj_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParam_obj_blockAccess().getStructural_blockStructural_blockParserRuleCall_0_0()); 
	    }
		lv_structural_block_0_0=rulestructural_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParam_obj_blockRule());
	        }
       		set(
       			$current, 
       			"structural_block",
        		lv_structural_block_0_0, 
        		"structural_block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getParam_obj_blockAccess().getVariability_blockVariability_blockParserRuleCall_1_0()); 
	    }
		lv_variability_block_1_0=rulevariability_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParam_obj_blockRule());
	        }
       		set(
       			$current, 
       			"variability_block",
        		lv_variability_block_1_0, 
        		"variability_block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulestructural_block
entryRulestructural_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructural_blockRule()); }
	 iv_rulestructural_block=rulestructural_block 
	 { $current=$iv_rulestructural_block.current; } 
	 EOF 
;

// Rule structural_block
rulestructural_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'STRUCTURAL' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getStructural_blockAccess().getIdentifierSTRUCTURALKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructural_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "STRUCTURAL");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStructural_blockAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructural_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulevariability_block
entryRulevariability_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariability_blockRule()); }
	 iv_rulevariability_block=rulevariability_block 
	 { $current=$iv_rulevariability_block.current; } 
	 EOF 
;

// Rule variability_block
rulevariability_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'VARIABILITY' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getVariability_blockAccess().getIdentifierVARIABILITYKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariability_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "VARIABILITY");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariability_blockAccess().getBlockVariability_block_contentParserRuleCall_1_0()); 
	    }
		lv_block_1_0=rulevariability_block_content		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariability_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"variability_block_content");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuledata_obj_block
entryRuledata_obj_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getData_obj_blockRule()); }
	 iv_ruledata_obj_block=ruledata_obj_block 
	 { $current=$iv_ruledata_obj_block.current; } 
	 EOF 
;

// Rule data_obj_block
ruledata_obj_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getData_obj_blockAccess().getHeader_blockHeader_blockParserRuleCall_0_0()); 
	    }
		lv_header_block_0_0=ruleheader_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getData_obj_blockRule());
	        }
       		set(
       			$current, 
       			"header_block",
        		lv_header_block_0_0, 
        		"header_block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getData_obj_blockAccess().getFile_blockFile_blockParserRuleCall_1_0()); 
	    }
		lv_file_block_1_0=rulefile_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getData_obj_blockRule());
	        }
       		set(
       			$current, 
       			"file_block",
        		lv_file_block_1_0, 
        		"file_block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleheader_block
entryRuleheader_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeader_blockRule()); }
	 iv_ruleheader_block=ruleheader_block 
	 { $current=$iv_ruleheader_block.current; } 
	 EOF 
;

// Rule header_block
ruleheader_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'HEADER' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getHeader_blockAccess().getIdentifierHEADERKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHeader_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "HEADER");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getHeader_blockAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeader_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulefile_block
entryRulefile_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFile_blockRule()); }
	 iv_rulefile_block=rulefile_block 
	 { $current=$iv_rulefile_block.current; } 
	 EOF 
;

// Rule file_block
rulefile_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'FILE' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getFile_blockAccess().getIdentifierFILEKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFile_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "FILE");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFile_blockAccess().getBlockFile_block_contentParserRuleCall_1_0()); 
	    }
		lv_block_1_0=rulefile_block_content		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFile_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"file_block_content");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuletask_obj_block
entryRuletask_obj_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTask_obj_blockRule()); }
	 iv_ruletask_obj_block=ruletask_obj_block 
	 { $current=$iv_ruletask_obj_block.current; } 
	 EOF 
;

// Rule task_obj_block
ruletask_obj_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTask_obj_blockAccess().getFunction_declarationFunction_declarationParserRuleCall_0_0()); 
	    }
		lv_function_declaration_0_0=rulefunction_declaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTask_obj_blockRule());
	        }
       		set(
       			$current, 
       			"function_declaration",
        		lv_function_declaration_0_0, 
        		"function_declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTask_obj_blockAccess().getParameters_blockParameters_blockParserRuleCall_1_0()); 
	    }
		lv_parameters_block_1_0=ruleparameters_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTask_obj_blockRule());
	        }
       		set(
       			$current, 
       			"parameters_block",
        		lv_parameters_block_1_0, 
        		"parameters_block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTask_obj_blockAccess().getData_blockData_blockParserRuleCall_2_0()); 
	    }
		lv_data_block_2_0=ruledata_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTask_obj_blockRule());
	        }
       		set(
       			$current, 
       			"data_block",
        		lv_data_block_2_0, 
        		"data_block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleparameters_block
entryRuleparameters_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameters_blockRule()); }
	 iv_ruleparameters_block=ruleparameters_block 
	 { $current=$iv_ruleparameters_block.current; } 
	 EOF 
;

// Rule parameters_block
ruleparameters_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'PARAMETERS' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getParameters_blockAccess().getIdentifierPARAMETERSKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameters_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "PARAMETERS");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParameters_blockAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameters_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuledata_block
entryRuledata_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getData_blockRule()); }
	 iv_ruledata_block=ruledata_block 
	 { $current=$iv_ruledata_block.current; } 
	 EOF 
;

// Rule data_block
ruledata_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'DATA' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getData_blockAccess().getIdentifierDATAKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getData_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "DATA");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getData_blockAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getData_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulemodel_block
entryRulemodel_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModel_blockRule()); }
	 iv_rulemodel_block=rulemodel_block 
	 { $current=$iv_rulemodel_block.current; } 
	 EOF 
;

// Rule model_block
rulemodel_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getModel_blockAccess().getModel_blockAction_0(),
            $current);
    }
)this_BEGIN_1=RULE_BEGIN
    { 
    newLeafNode(this_BEGIN_1, grammarAccess.getModel_blockAccess().getBEGINTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModel_blockAccess().getStatementsModel_block_statementParserRuleCall_2_0()); 
	    }
		lv_statements_2_0=rulemodel_block_statement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModel_blockRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_2_0, 
        		"model_block_statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_END_3=RULE_END
    { 
    newLeafNode(this_END_3, grammarAccess.getModel_blockAccess().getENDTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRulemodel_block_statement
entryRulemodel_block_statement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModel_block_statementRule()); }
	 iv_rulemodel_block_statement=rulemodel_block_statement 
	 { $current=$iv_rulemodel_block_statement.current; } 
	 EOF 
;

// Rule model_block_statement
rulemodel_block_statement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModel_block_statementAccess().getStatementBlock_statementParserRuleCall_0_0()); 
	    }
		lv_statement_0_0=ruleblock_statement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModel_block_statementRule());
	        }
       		set(
       			$current, 
       			"statement",
        		lv_statement_0_0, 
        		"block_statement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModel_block_statementAccess().getOde_blockOde_blockParserRuleCall_1_0()); 
	    }
		lv_ode_block_1_0=ruleode_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModel_block_statementRule());
	        }
       		set(
       			$current, 
       			"ode_block",
        		lv_ode_block_1_0, 
        		"ode_block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModel_block_statementAccess().getLibrary_blockLibrary_blockParserRuleCall_2_0()); 
	    }
		lv_library_block_2_0=rulelibrary_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModel_block_statementRule());
	        }
       		set(
       			$current, 
       			"library_block",
        		lv_library_block_2_0, 
        		"library_block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulelibrary_block
entryRulelibrary_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLibrary_blockRule()); }
	 iv_rulelibrary_block=rulelibrary_block 
	 { $current=$iv_rulelibrary_block.current; } 
	 EOF 
;

// Rule library_block
rulelibrary_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'LIBRARY' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getLibrary_blockAccess().getIdentifierLIBRARYKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLibrary_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "LIBRARY");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLibrary_blockAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLibrary_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleode_block
entryRuleode_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOde_blockRule()); }
	 iv_ruleode_block=ruleode_block 
	 { $current=$iv_ruleode_block.current; } 
	 EOF 
;

// Rule ode_block
ruleode_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'ODE' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getOde_blockAccess().getIdentifierODEKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOde_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "ODE");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOde_blockAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOde_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulevariability_block_content
entryRulevariability_block_content returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariability_block_contentRule()); }
	 iv_rulevariability_block_content=rulevariability_block_content 
	 { $current=$iv_rulevariability_block_content.current; } 
	 EOF 
;

// Rule variability_block_content
rulevariability_block_content returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariability_block_contentAccess().getVariability_block_contentAction_0(),
            $current);
    }
)this_BEGIN_1=RULE_BEGIN
    { 
    newLeafNode(this_BEGIN_1, grammarAccess.getVariability_block_contentAccess().getBEGINTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariability_block_contentAccess().getBlocksVariability_block_statementParserRuleCall_2_0()); 
	    }
		lv_blocks_2_0=rulevariability_block_statement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariability_block_contentRule());
	        }
       		add(
       			$current, 
       			"blocks",
        		lv_blocks_2_0, 
        		"variability_block_statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_END_3=RULE_END
    { 
    newLeafNode(this_END_3, grammarAccess.getVariability_block_contentAccess().getENDTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRulevariability_block_statement
entryRulevariability_block_statement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariability_block_statementRule()); }
	 iv_rulevariability_block_statement=rulevariability_block_statement 
	 { $current=$iv_rulevariability_block_statement.current; } 
	 EOF 
;

// Rule variability_block_statement
rulevariability_block_statement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariability_block_statementAccess().getBlock_statementBlock_statementParserRuleCall_0_0()); 
	    }
		lv_block_statement_0_0=ruleblock_statement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariability_block_statementRule());
	        }
       		set(
       			$current, 
       			"block_statement",
        		lv_block_statement_0_0, 
        		"block_statement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getVariability_block_statementAccess().getBlock_blockBlock_subblockParserRuleCall_1_0()); 
	    }
		lv_block_block_1_0=ruleblock_subblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariability_block_statementRule());
	        }
       		set(
       			$current, 
       			"block_block",
        		lv_block_block_1_0, 
        		"block_subblock");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getVariability_block_statementAccess().getDiag_blockDiag_subblockParserRuleCall_2_0()); 
	    }
		lv_diag_block_2_0=rulediag_subblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariability_block_statementRule());
	        }
       		set(
       			$current, 
       			"diag_block",
        		lv_diag_block_2_0, 
        		"diag_subblock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleblock_subblock
entryRuleblock_subblock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlock_subblockRule()); }
	 iv_ruleblock_subblock=ruleblock_subblock 
	 { $current=$iv_ruleblock_subblock.current; } 
	 EOF 
;

// Rule block_subblock
ruleblock_subblock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'block' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getBlock_subblockAccess().getIdentifierBlockKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBlock_subblockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "block");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBlock_subblockAccess().getBlockVariability_subblockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=rulevariability_subblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlock_subblockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"variability_subblock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulediag_subblock
entryRulediag_subblock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDiag_subblockRule()); }
	 iv_rulediag_subblock=rulediag_subblock 
	 { $current=$iv_rulediag_subblock.current; } 
	 EOF 
;

// Rule diag_subblock
rulediag_subblock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'diag' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getDiag_subblockAccess().getIdentifierDiagKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDiag_subblockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "diag");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDiag_subblockAccess().getBlockVariability_subblockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=rulevariability_subblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDiag_subblockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"variability_subblock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulevariability_subblock
entryRulevariability_subblock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariability_subblockRule()); }
	 iv_rulevariability_subblock=rulevariability_subblock 
	 { $current=$iv_rulevariability_subblock.current; } 
	 EOF 
;

// Rule variability_subblock
rulevariability_subblock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVariability_subblockAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariability_subblockAccess().getArgumentsArgumentsParserRuleCall_1_0()); 
	    }
		lv_arguments_1_0=rulearguments		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariability_subblockRule());
	        }
       		set(
       			$current, 
       			"arguments",
        		lv_arguments_1_0, 
        		"arguments");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariability_subblockAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRulefile_block_content
entryRulefile_block_content returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFile_block_contentRule()); }
	 iv_rulefile_block_content=rulefile_block_content 
	 { $current=$iv_rulefile_block_content.current; } 
	 EOF 
;

// Rule file_block_content
rulefile_block_content returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFile_block_contentAccess().getFile_block_contentAction_0(),
            $current);
    }
)this_BEGIN_1=RULE_BEGIN
    { 
    newLeafNode(this_BEGIN_1, grammarAccess.getFile_block_contentAccess().getBEGINTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFile_block_contentAccess().getBlocksFile_block_statementParserRuleCall_2_0()); 
	    }
		lv_blocks_2_0=rulefile_block_statement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFile_block_contentRule());
	        }
       		add(
       			$current, 
       			"blocks",
        		lv_blocks_2_0, 
        		"file_block_statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_END_3=RULE_END
    { 
    newLeafNode(this_END_3, grammarAccess.getFile_block_contentAccess().getENDTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRulefile_block_statement
entryRulefile_block_statement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFile_block_statementRule()); }
	 iv_rulefile_block_statement=rulefile_block_statement 
	 { $current=$iv_rulefile_block_statement.current; } 
	 EOF 
;

// Rule file_block_statement
rulefile_block_statement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFile_block_statementAccess().getStatementBlock_statementParserRuleCall_0_0()); 
	    }
		lv_statement_0_0=ruleblock_statement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFile_block_statementRule());
	        }
       		set(
       			$current, 
       			"statement",
        		lv_statement_0_0, 
        		"block_statement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFile_block_statementAccess().getInline_blockInline_blockParserRuleCall_1_0()); 
	    }
		lv_inline_block_1_0=ruleinline_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFile_block_statementRule());
	        }
       		set(
       			$current, 
       			"inline_block",
        		lv_inline_block_1_0, 
        		"inline_block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFile_block_statementAccess().getDesign_blockDesign_blockParserRuleCall_2_0()); 
	    }
		lv_design_block_2_0=ruledesign_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFile_block_statementRule());
	        }
       		set(
       			$current, 
       			"design_block",
        		lv_design_block_2_0, 
        		"design_block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFile_block_statementAccess().getRsscript_blockRsscript_blockParserRuleCall_3_0()); 
	    }
		lv_rsscript_block_3_0=rulersscript_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFile_block_statementRule());
	        }
       		set(
       			$current, 
       			"rsscript_block",
        		lv_rsscript_block_3_0, 
        		"rsscript_block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleinline_block
entryRuleinline_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInline_blockRule()); }
	 iv_ruleinline_block=ruleinline_block 
	 { $current=$iv_ruleinline_block.current; } 
	 EOF 
;

// Rule inline_block
ruleinline_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'INLINE' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getInline_blockAccess().getIdentifierINLINEKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInline_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "INLINE");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInline_blockAccess().getBlockInline_block_contentParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleinline_block_content		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInline_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"inline_block_content");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuledesign_block
entryRuledesign_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_blockRule()); }
	 iv_ruledesign_block=ruledesign_block 
	 { $current=$iv_ruledesign_block.current; } 
	 EOF 
;

// Rule design_block
ruledesign_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'DESIGN' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getDesign_blockAccess().getIdentifierDESIGNKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDesign_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "DESIGN");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_blockAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulersscript_block
entryRulersscript_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRsscript_blockRule()); }
	 iv_rulersscript_block=rulersscript_block 
	 { $current=$iv_rulersscript_block.current; } 
	 EOF 
;

// Rule rsscript_block
rulersscript_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'RSSCRIPT' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getRsscript_blockAccess().getIdentifierRSSCRIPTKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRsscript_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "RSSCRIPT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRsscript_blockAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRsscript_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleinline_block_content
entryRuleinline_block_content returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInline_block_contentRule()); }
	 iv_ruleinline_block_content=ruleinline_block_content 
	 { $current=$iv_ruleinline_block_content.current; } 
	 EOF 
;

// Rule inline_block_content
ruleinline_block_content returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInline_block_contentAccess().getInline_block_contentAction_0(),
            $current);
    }
)this_BEGIN_1=RULE_BEGIN
    { 
    newLeafNode(this_BEGIN_1, grammarAccess.getInline_block_contentAccess().getBEGINTerminalRuleCall_1()); 
    }
(
(
		lv_identifiers_2_0=RULE_ID
		{
			newLeafNode(lv_identifiers_2_0, grammarAccess.getInline_block_contentAccess().getIdentifiersIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInline_block_contentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"identifiers",
        		lv_identifiers_2_0, 
        		"ID");
	    }

)
)*(
(
(
		{ 
	        newCompositeNode(grammarAccess.getInline_block_contentAccess().getValuesNUMBERParserRuleCall_3_0_0()); 
	    }
		lv_values_3_1=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInline_block_contentRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_3_1, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

    |		lv_values_3_2=	'.' 
    {
        newLeafNode(lv_values_3_2, grammarAccess.getInline_block_contentAccess().getValuesFullStopKeyword_3_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInline_block_contentRule());
	        }
       		addWithLastConsumed($current, "values", lv_values_3_2, null);
	    }

)

)
)*this_END_4=RULE_END
    { 
    newLeafNode(this_END_4, grammarAccess.getInline_block_contentAccess().getENDTerminalRuleCall_4()); 
    }
)
;





// Entry rule entryRulefunction_declaration
entryRulefunction_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunction_declarationRule()); }
	 iv_rulefunction_declaration=rulefunction_declaration 
	 { $current=$iv_rulefunction_declaration.current; } 
	 EOF 
;

// Rule function_declaration
rulefunction_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=RULE_ID
		{
			newLeafNode(lv_identifier_0_0, grammarAccess.getFunction_declarationAccess().getIdentifierIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunction_declarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"identifier",
        		lv_identifier_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFunction_declarationAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='function' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFunction_declarationAccess().getFunctionKeyword_2());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFunction_declarationAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunction_declarationAccess().getFormal_argumentsFormal_argumentsParserRuleCall_4_0()); 
	    }
		lv_formal_arguments_4_0=ruleformal_arguments		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunction_declarationRule());
	        }
       		set(
       			$current, 
       			"formal_arguments",
        		lv_formal_arguments_4_0, 
        		"formal_arguments");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFunction_declarationAccess().getRightParenthesisKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunction_declarationAccess().getFunction_bodyFunction_bodyParserRuleCall_6_0()); 
	    }
		lv_function_body_6_0=rulefunction_body		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunction_declarationRule());
	        }
       		set(
       			$current, 
       			"function_body",
        		lv_function_body_6_0, 
        		"function_body");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulefunction_body
entryRulefunction_body returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunction_bodyRule()); }
	 iv_rulefunction_body=rulefunction_body 
	 { $current=$iv_rulefunction_body.current; } 
	 EOF 
;

// Rule function_body
rulefunction_body returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFunction_bodyAccess().getFunction_bodyAction_0(),
            $current);
    }
)this_BEGIN_1=RULE_BEGIN
    { 
    newLeafNode(this_BEGIN_1, grammarAccess.getFunction_bodyAccess().getBEGINTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunction_bodyAccess().getBlocksFunction_subblockParserRuleCall_2_0()); 
	    }
		lv_blocks_2_0=rulefunction_subblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunction_bodyRule());
	        }
       		add(
       			$current, 
       			"blocks",
        		lv_blocks_2_0, 
        		"function_subblock");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_END_3=RULE_END
    { 
    newLeafNode(this_END_3, grammarAccess.getFunction_bodyAccess().getENDTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRulefunction_subblock
entryRulefunction_subblock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunction_subblockRule()); }
	 iv_rulefunction_subblock=rulefunction_subblock 
	 { $current=$iv_rulefunction_subblock.current; } 
	 EOF 
;

// Rule function_subblock
rulefunction_subblock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_identifier_0_0=	'ESTIMATE' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getFunction_subblockAccess().getIdentifierESTIMATEKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunction_subblockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "ESTIMATE");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFunction_subblockAccess().getEstimate_defnBlockParserRuleCall_0_1_0()); 
	    }
		lv_estimate_defn_1_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunction_subblockRule());
	        }
       		set(
       			$current, 
       			"estimate_defn",
        		lv_estimate_defn_1_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_identifier_2_0=	'SIMULATE' 
    {
        newLeafNode(lv_identifier_2_0, grammarAccess.getFunction_subblockAccess().getIdentifierSIMULATEKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunction_subblockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_2_0, "SIMULATE");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFunction_subblockAccess().getSimulate_defnBlockParserRuleCall_1_1_0()); 
	    }
		lv_simulate_defn_3_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunction_subblockRule());
	        }
       		set(
       			$current, 
       			"simulate_defn",
        		lv_simulate_defn_3_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleformal_arguments
entryRuleformal_arguments returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormal_argumentsRule()); }
	 iv_ruleformal_arguments=ruleformal_arguments 
	 { $current=$iv_ruleformal_arguments.current; } 
	 EOF 
;

// Rule formal_arguments
ruleformal_arguments returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifiers_0_0=RULE_ID
		{
			newLeafNode(lv_identifiers_0_0, grammarAccess.getFormal_argumentsAccess().getIdentifiersIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormal_argumentsRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"identifiers",
        		lv_identifiers_0_0, 
        		"ID");
	    }

)
)(((	',' 
)=>	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFormal_argumentsAccess().getCommaKeyword_1_0());
    }
)(
(
		lv_identifiers_2_0=RULE_ID
		{
			newLeafNode(lv_identifiers_2_0, grammarAccess.getFormal_argumentsAccess().getIdentifiersIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormal_argumentsRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"identifiers",
        		lv_identifiers_2_0, 
        		"ID");
	    }

)
))*)
;





// Entry rule entryRulefunction_call
entryRulefunction_call returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunction_callRule()); }
	 iv_rulefunction_call=rulefunction_call 
	 { $current=$iv_rulefunction_call.current; } 
	 EOF 
;

// Rule function_call
rulefunction_call returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_funct_name_0_0=RULE_ID
		{
			newLeafNode(lv_funct_name_0_0, grammarAccess.getFunction_callAccess().getFunct_nameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunction_callRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"funct_name",
        		lv_funct_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFunction_callAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunction_callAccess().getArgumentsArgumentsParserRuleCall_2_0()); 
	    }
		lv_arguments_2_0=rulearguments		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunction_callRule());
	        }
       		set(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"arguments");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFunction_callAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleblock
entryRuleblock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	 iv_ruleblock=ruleblock 
	 { $current=$iv_ruleblock.current; } 
	 EOF 
;

// Rule block
ruleblock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBlockAccess().getBlockAction_0(),
            $current);
    }
)this_BEGIN_1=RULE_BEGIN
    { 
    newLeafNode(this_BEGIN_1, grammarAccess.getBlockAccess().getBEGINTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockAccess().getStatementsBlock_statementParserRuleCall_2_0()); 
	    }
		lv_statements_2_0=ruleblock_statement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_2_0, 
        		"block_statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_END_3=RULE_END
    { 
    newLeafNode(this_END_3, grammarAccess.getBlockAccess().getENDTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleblock_statement
entryRuleblock_statement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlock_statementRule()); }
	 iv_ruleblock_statement=ruleblock_statement 
	 { $current=$iv_ruleblock_statement.current; } 
	 EOF 
;

// Rule block_statement
ruleblock_statement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBlock_statementAccess().getVariable_declarationVariable_declarationParserRuleCall_0_0()); 
	    }
		lv_variable_declaration_0_0=rulevariable_declaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlock_statementRule());
	        }
       		set(
       			$current, 
       			"variable_declaration",
        		lv_variable_declaration_0_0, 
        		"variable_declaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getBlock_statementAccess().getFunction_callFunction_callParserRuleCall_1_0()); 
	    }
		lv_function_call_1_0=rulefunction_call		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlock_statementRule());
	        }
       		set(
       			$current, 
       			"function_call",
        		lv_function_call_1_0, 
        		"function_call");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getBlock_statementAccess().getStatementStatementParserRuleCall_2_0()); 
	    }
		lv_statement_2_0=rulestatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlock_statementRule());
	        }
       		set(
       			$current, 
       			"statement",
        		lv_statement_2_0, 
        		"statement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getBlock_statementAccess().getVerbatim_blockVerbatim_blockParserRuleCall_3_0()); 
	    }
		lv_verbatim_block_3_0=ruleverbatim_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlock_statementRule());
	        }
       		set(
       			$current, 
       			"verbatim_block",
        		lv_verbatim_block_3_0, 
        		"verbatim_block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleverbatim_block
entryRuleverbatim_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerbatim_blockRule()); }
	 iv_ruleverbatim_block=ruleverbatim_block 
	 { $current=$iv_ruleverbatim_block.current; } 
	 EOF 
;

// Rule verbatim_block
ruleverbatim_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=	'VERBATIM' 
    {
        newLeafNode(lv_identifier_0_0, grammarAccess.getVerbatim_blockAccess().getIdentifierVERBATIMKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerbatim_blockRule());
	        }
       		setWithLastConsumed($current, "identifier", lv_identifier_0_0, "VERBATIM");
	    }

)
)this_BEGIN_1=RULE_BEGIN
    { 
    newLeafNode(this_BEGIN_1, grammarAccess.getVerbatim_blockAccess().getBEGINTerminalRuleCall_1()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getVerbatim_blockAccess().getBlockTarget_blockParserRuleCall_2_0_0()); 
	    }
		lv_block_2_0=ruletarget_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerbatim_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_2_0, 
        		"target_block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_external_code_3_0=RULE_EXTERNAL_CODE
		{
			newLeafNode(lv_external_code_3_0, grammarAccess.getVerbatim_blockAccess().getExternal_codeEXTERNAL_CODETerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerbatim_blockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"external_code",
        		lv_external_code_3_0, 
        		"EXTERNAL_CODE");
	    }

)
))this_END_4=RULE_END
    { 
    newLeafNode(this_END_4, grammarAccess.getVerbatim_blockAccess().getENDTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuletarget_block
entryRuletarget_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTarget_blockRule()); }
	 iv_ruletarget_block=ruletarget_block 
	 { $current=$iv_ruletarget_block.current; } 
	 EOF 
;

// Rule target_block
ruletarget_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTarget_blockAccess().getIdentifierTarget_languageParserRuleCall_0_0()); 
	    }
		lv_identifier_0_0=ruletarget_language		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTarget_blockRule());
	        }
       		set(
       			$current, 
       			"identifier",
        		lv_identifier_0_0, 
        		"target_language");
	        afterParserOrEnumRuleCall();
	    }

)
)this_BEGIN_1=RULE_BEGIN
    { 
    newLeafNode(this_BEGIN_1, grammarAccess.getTarget_blockAccess().getBEGINTerminalRuleCall_1()); 
    }
(
(
		lv_external_code_2_0=RULE_EXTERNAL_CODE
		{
			newLeafNode(lv_external_code_2_0, grammarAccess.getTarget_blockAccess().getExternal_codeEXTERNAL_CODETerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTarget_blockRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"external_code",
        		lv_external_code_2_0, 
        		"EXTERNAL_CODE");
	    }

)
)this_END_3=RULE_END
    { 
    newLeafNode(this_END_3, grammarAccess.getTarget_blockAccess().getENDTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuletarget_language
entryRuletarget_language returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTarget_languageRule()); } 
	 iv_ruletarget_language=ruletarget_language 
	 { $current=$iv_ruletarget_language.current.getText(); }  
	 EOF 
;

// Rule target_language
ruletarget_language returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='NMTRAN' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTarget_languageAccess().getNMTRANKeyword_0()); 
    }

    |
	kw='MLXTRAN' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTarget_languageAccess().getMLXTRANKeyword_1()); 
    }

    |
	kw='PML' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTarget_languageAccess().getPMLKeyword_2()); 
    }

    |
	kw='BUGS' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTarget_languageAccess().getBUGSKeyword_3()); 
    }

    |
	kw='RCODE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTarget_languageAccess().getRCODEKeyword_4()); 
    }

    |
	kw='MATLAB' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTarget_languageAccess().getMATLABKeyword_5()); 
    }
)
    ;





// Entry rule entryRulevariable_declaration
entryRulevariable_declaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariable_declarationRule()); }
	 iv_rulevariable_declaration=rulevariable_declaration 
	 { $current=$iv_rulevariable_declaration.current; } 
	 EOF 
;

// Rule variable_declaration
rulevariable_declaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariable_declarationAccess().getIdentifierVariable_nameParserRuleCall_0_0()); 
	    }
		lv_identifier_0_0=rulevariable_name		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariable_declarationRule());
	        }
       		set(
       			$current, 
       			"identifier",
        		lv_identifier_0_0, 
        		"variable_name");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVariable_declarationAccess().getEqualsSignKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariable_declarationAccess().getExpressionAny_expressionParserRuleCall_1_0_1_0()); 
	    }
		lv_expression_2_0=ruleany_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariable_declarationRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"any_expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getVariable_declarationAccess().getRandom_listRandom_listParserRuleCall_1_1_0()); 
	    }
		lv_random_list_3_0=rulerandom_list		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariable_declarationRule());
	        }
       		set(
       			$current, 
       			"random_list",
        		lv_random_list_3_0, 
        		"random_list");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleany_expression
entryRuleany_expression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAny_expressionRule()); }
	 iv_ruleany_expression=ruleany_expression 
	 { $current=$iv_ruleany_expression.current; } 
	 EOF 
;

// Rule any_expression
ruleany_expression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAny_expressionAccess().getExpressionExpressionParserRuleCall_0_0()); 
	    }
		lv_expression_0_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAny_expressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_0_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAny_expressionAccess().getListListParserRuleCall_1_0()); 
	    }
		lv_list_1_0=rulelist		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAny_expressionRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_1_0, 
        		"list");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAny_expressionAccess().getOde_listOde_listParserRuleCall_2_0()); 
	    }
		lv_ode_list_2_0=ruleode_list		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAny_expressionRule());
	        }
       		set(
       			$current, 
       			"ode_list",
        		lv_ode_list_2_0, 
        		"ode_list");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAny_expressionAccess().getRandom_listRandom_listParserRuleCall_3_0()); 
	    }
		lv_random_list_3_0=rulerandom_list		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAny_expressionRule());
	        }
       		set(
       			$current, 
       			"random_list",
        		lv_random_list_3_0, 
        		"random_list");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleexpression
entryRuleexpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleexpression=ruleexpression 
	 { $current=$iv_ruleexpression.current; } 
	 EOF 
;

// Rule expression
ruleexpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getConditional_expressionConditional_expressionParserRuleCall_0_0()); 
	    }
		lv_conditional_expression_0_0=ruleconditional_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"conditional_expression",
        		lv_conditional_expression_0_0, 
        		"conditional_expression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		lv_string_expression_1_0=RULE_STRING
		{
			newLeafNode(lv_string_expression_1_0, grammarAccess.getExpressionAccess().getString_expressionSTRINGTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"string_expression",
        		lv_string_expression_1_0, 
        		"STRING");
	    }

)
)(	otherlv_2='+' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExpressionAccess().getPlusSignKeyword_1_1_0());
    }
(
(
		lv_string_expression_3_0=RULE_STRING
		{
			newLeafNode(lv_string_expression_3_0, grammarAccess.getExpressionAccess().getString_expressionSTRINGTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"string_expression",
        		lv_string_expression_3_0, 
        		"STRING");
	    }

)
))*))
;





// Entry rule entryRulelist
entryRulelist returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListRule()); }
	 iv_rulelist=rulelist 
	 { $current=$iv_rulelist.current; } 
	 EOF 
;

// Rule list
rulelist returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='list' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getListAccess().getListKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getListAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListAccess().getArgumentsArgumentsParserRuleCall_2_0()); 
	    }
		lv_arguments_2_0=rulearguments		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListRule());
	        }
       		set(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"arguments");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getListAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleode_list
entryRuleode_list returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOde_listRule()); }
	 iv_ruleode_list=ruleode_list 
	 { $current=$iv_ruleode_list.current; } 
	 EOF 
;

// Rule ode_list
ruleode_list returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ode' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOde_listAccess().getOdeKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOde_listAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOde_listAccess().getArgumentsArgumentsParserRuleCall_2_0()); 
	    }
		lv_arguments_2_0=rulearguments		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOde_listRule());
	        }
       		set(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"arguments");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOde_listAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRulerandom_list
entryRulerandom_list returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRandom_listRule()); }
	 iv_rulerandom_list=rulerandom_list 
	 { $current=$iv_rulerandom_list.current; } 
	 EOF 
;

// Rule random_list
rulerandom_list returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='~' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRandom_listAccess().getTildeKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRandom_listAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRandom_listAccess().getArgumentsArgumentsParserRuleCall_2_0()); 
	    }
		lv_arguments_2_0=rulearguments		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRandom_listRule());
	        }
       		set(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"arguments");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRandom_listAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRulearguments
entryRulearguments returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentsRule()); }
	 iv_rulearguments=rulearguments 
	 { $current=$iv_rulearguments.current; } 
	 EOF 
;

// Rule arguments
rulearguments returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_0_0()); 
	    }
		lv_arguments_0_0=ruleargument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentsRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_0_0, 
        		"argument");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	',' 
)=>	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getCommaKeyword_1_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentsAccess().getArgumentsArgumentParserRuleCall_1_1_0()); 
	    }
		lv_arguments_2_0=ruleargument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentsRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"argument");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleargument
entryRuleargument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentRule()); }
	 iv_ruleargument=ruleargument 
	 { $current=$iv_ruleargument.current; } 
	 EOF 
;

// Rule argument
ruleargument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_identifier_0_0=RULE_ID
		{
			newLeafNode(lv_identifier_0_0, grammarAccess.getArgumentAccess().getIdentifierIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArgumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"identifier",
        		lv_identifier_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArgumentAccess().getEqualsSignKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentAccess().getExpressionAny_expressionParserRuleCall_0_2_0()); 
	    }
		lv_expression_2_0=ruleany_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"any_expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentAccess().getExpressionAny_expressionParserRuleCall_1_0()); 
	    }
		lv_expression_3_0=ruleany_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"any_expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulestatement
entryRulestatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	 iv_rulestatement=rulestatement 
	 { $current=$iv_rulestatement.current; } 
	 EOF 
;

// Rule statement
rulestatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getBlockBlockParserRuleCall_0_0()); 
	    }
		lv_block_0_0=ruleblock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_0_0, 
        		"block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_1='if' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStatementAccess().getIfKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getPar_expressionPar_expressionParserRuleCall_1_1_0()); 
	    }
		lv_par_expression_2_0=rulepar_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"par_expression",
        		lv_par_expression_2_0, 
        		"par_expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getIf_statementBlock_statementParserRuleCall_1_2_0()); 
	    }
		lv_if_statement_3_0=ruleblock_statement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"if_statement",
        		lv_if_statement_3_0, 
        		"block_statement");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'else' 
)=>	otherlv_4='else' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStatementAccess().getElseKeyword_1_3_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementAccess().getElse_statementBlock_statementParserRuleCall_1_3_1_0()); 
	    }
		lv_else_statement_5_0=ruleblock_statement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementRule());
	        }
       		set(
       			$current, 
       			"else_statement",
        		lv_else_statement_5_0, 
        		"block_statement");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
;





// Entry rule entryRulepar_expression
entryRulepar_expression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPar_expressionRule()); }
	 iv_rulepar_expression=rulepar_expression 
	 { $current=$iv_rulepar_expression.current; } 
	 EOF 
;

// Rule par_expression
rulepar_expression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPar_expressionAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPar_expressionAccess().getExpressionExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_1_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPar_expressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_1_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPar_expressionAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleconditional_expression
entryRuleconditional_expression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditional_expressionRule()); }
	 iv_ruleconditional_expression=ruleconditional_expression 
	 { $current=$iv_ruleconditional_expression.current; } 
	 EOF 
;

// Rule conditional_expression
ruleconditional_expression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConditional_expressionAccess().getConditional_or_expressionConditional_or_expressionParserRuleCall_0_0()); 
	    }
		lv_conditional_or_expression_0_0=ruleconditional_or_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditional_expressionRule());
	        }
       		set(
       			$current, 
       			"conditional_or_expression",
        		lv_conditional_or_expression_0_0, 
        		"conditional_or_expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='?' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConditional_expressionAccess().getQuestionMarkKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditional_expressionAccess().getExpression1ExpressionParserRuleCall_1_1_0()); 
	    }
		lv_expression1_2_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditional_expressionRule());
	        }
       		set(
       			$current, 
       			"expression1",
        		lv_expression1_2_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConditional_expressionAccess().getColonKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditional_expressionAccess().getExpression2ExpressionParserRuleCall_1_3_0()); 
	    }
		lv_expression2_4_0=ruleexpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditional_expressionRule());
	        }
       		set(
       			$current, 
       			"expression2",
        		lv_expression2_4_0, 
        		"expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleconditional_or_expression
entryRuleconditional_or_expression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditional_or_expressionRule()); }
	 iv_ruleconditional_or_expression=ruleconditional_or_expression 
	 { $current=$iv_ruleconditional_or_expression.current; } 
	 EOF 
;

// Rule conditional_or_expression
ruleconditional_or_expression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConditional_or_expressionAccess().getConditional_and_expressionConditional_and_expressionParserRuleCall_0_0()); 
	    }
		lv_conditional_and_expression_0_0=ruleconditional_and_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditional_or_expressionRule());
	        }
       		add(
       			$current, 
       			"conditional_and_expression",
        		lv_conditional_and_expression_0_0, 
        		"conditional_and_expression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getConditional_or_expressionAccess().getOperatorOr_opParserRuleCall_1_0_0()); 
	    }
		lv_operator_1_0=ruleor_op		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditional_or_expressionRule());
	        }
       		add(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"or_op");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConditional_or_expressionAccess().getConditional_and_expressionConditional_and_expressionParserRuleCall_1_1_0()); 
	    }
		lv_conditional_and_expression_2_0=ruleconditional_and_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditional_or_expressionRule());
	        }
       		add(
       			$current, 
       			"conditional_and_expression",
        		lv_conditional_and_expression_2_0, 
        		"conditional_and_expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleconditional_and_expression
entryRuleconditional_and_expression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditional_and_expressionRule()); }
	 iv_ruleconditional_and_expression=ruleconditional_and_expression 
	 { $current=$iv_ruleconditional_and_expression.current; } 
	 EOF 
;

// Rule conditional_and_expression
ruleconditional_and_expression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConditional_and_expressionAccess().getRelational_expressionRelational_expressionParserRuleCall_0_0()); 
	    }
		lv_relational_expression_0_0=rulerelational_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditional_and_expressionRule());
	        }
       		add(
       			$current, 
       			"relational_expression",
        		lv_relational_expression_0_0, 
        		"relational_expression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getConditional_and_expressionAccess().getOperatorAnd_opParserRuleCall_1_0_0()); 
	    }
		lv_operator_1_0=ruleand_op		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditional_and_expressionRule());
	        }
       		add(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"and_op");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConditional_and_expressionAccess().getRelational_expressionRelational_expressionParserRuleCall_1_1_0()); 
	    }
		lv_relational_expression_2_0=rulerelational_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditional_and_expressionRule());
	        }
       		add(
       			$current, 
       			"relational_expression",
        		lv_relational_expression_2_0, 
        		"relational_expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulerelational_expression
entryRulerelational_expression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelational_expressionRule()); }
	 iv_rulerelational_expression=rulerelational_expression 
	 { $current=$iv_rulerelational_expression.current; } 
	 EOF 
;

// Rule relational_expression
rulerelational_expression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_negation_0_0=	'!' 
    {
        newLeafNode(lv_negation_0_0, grammarAccess.getRelational_expressionAccess().getNegationExclamationMarkKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelational_expressionRule());
	        }
       		setWithLastConsumed($current, "negation", lv_negation_0_0, "!");
	    }

)
)?((
(
		lv_boolean_1_0=RULE_BOOLEAN
		{
			newLeafNode(lv_boolean_1_0, grammarAccess.getRelational_expressionAccess().getBooleanBOOLEANTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelational_expressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"boolean",
        		lv_boolean_1_0, 
        		"BOOLEAN");
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getRelational_expressionAccess().getAdditive_expressionAdditive_expressionParserRuleCall_1_1_0_0()); 
	    }
		lv_additive_expression_2_0=ruleadditive_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelational_expressionRule());
	        }
       		add(
       			$current, 
       			"additive_expression",
        		lv_additive_expression_2_0, 
        		"additive_expression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getRelational_expressionAccess().getRelational_opRelational_opParserRuleCall_1_1_1_0_0()); 
	    }
		lv_relational_op_3_0=rulerelational_op		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelational_expressionRule());
	        }
       		add(
       			$current, 
       			"relational_op",
        		lv_relational_op_3_0, 
        		"relational_op");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRelational_expressionAccess().getAdditive_expressionAdditive_expressionParserRuleCall_1_1_1_1_0()); 
	    }
		lv_additive_expression_4_0=ruleadditive_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelational_expressionRule());
	        }
       		add(
       			$current, 
       			"additive_expression",
        		lv_additive_expression_4_0, 
        		"additive_expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)))
;





// Entry rule entryRuleadditive_expression
entryRuleadditive_expression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdditive_expressionRule()); }
	 iv_ruleadditive_expression=ruleadditive_expression 
	 { $current=$iv_ruleadditive_expression.current; } 
	 EOF 
;

// Rule additive_expression
ruleadditive_expression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAdditive_expressionAccess().getMultiplicative_expressionMultiplicative_expressionParserRuleCall_0_0()); 
	    }
		lv_multiplicative_expression_0_0=rulemultiplicative_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditive_expressionRule());
	        }
       		add(
       			$current, 
       			"multiplicative_expression",
        		lv_multiplicative_expression_0_0, 
        		"multiplicative_expression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getAdditive_expressionAccess().getAdditive_opAdditive_opParserRuleCall_1_0_0()); 
	    }
		lv_additive_op_1_0=ruleadditive_op		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditive_expressionRule());
	        }
       		add(
       			$current, 
       			"additive_op",
        		lv_additive_op_1_0, 
        		"additive_op");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditive_expressionAccess().getMultiplicative_expressionMultiplicative_expressionParserRuleCall_1_1_0()); 
	    }
		lv_multiplicative_expression_2_0=rulemultiplicative_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditive_expressionRule());
	        }
       		add(
       			$current, 
       			"multiplicative_expression",
        		lv_multiplicative_expression_2_0, 
        		"multiplicative_expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulemultiplicative_expression
entryRulemultiplicative_expression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiplicative_expressionRule()); }
	 iv_rulemultiplicative_expression=rulemultiplicative_expression 
	 { $current=$iv_rulemultiplicative_expression.current; } 
	 EOF 
;

// Rule multiplicative_expression
rulemultiplicative_expression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicative_expressionAccess().getPower_expressionPower_expressionParserRuleCall_0_0()); 
	    }
		lv_power_expression_0_0=rulepower_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicative_expressionRule());
	        }
       		add(
       			$current, 
       			"power_expression",
        		lv_power_expression_0_0, 
        		"power_expression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicative_expressionAccess().getMultiplicative_opMultiplicative_opParserRuleCall_1_0_0()); 
	    }
		lv_multiplicative_op_1_0=rulemultiplicative_op		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicative_expressionRule());
	        }
       		add(
       			$current, 
       			"multiplicative_op",
        		lv_multiplicative_op_1_0, 
        		"multiplicative_op");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicative_expressionAccess().getPower_expressionPower_expressionParserRuleCall_1_1_0()); 
	    }
		lv_power_expression_2_0=rulepower_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicative_expressionRule());
	        }
       		add(
       			$current, 
       			"power_expression",
        		lv_power_expression_2_0, 
        		"power_expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulepower_expression
entryRulepower_expression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPower_expressionRule()); }
	 iv_rulepower_expression=rulepower_expression 
	 { $current=$iv_rulepower_expression.current; } 
	 EOF 
;

// Rule power_expression
rulepower_expression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPower_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_0_0()); 
	    }
		lv_unary_expression_0_0=ruleunary_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPower_expressionRule());
	        }
       		add(
       			$current, 
       			"unary_expression",
        		lv_unary_expression_0_0, 
        		"unary_expression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getPower_expressionAccess().getPower_opPower_opParserRuleCall_1_0_0()); 
	    }
		lv_power_op_1_0=rulepower_op		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPower_expressionRule());
	        }
       		add(
       			$current, 
       			"power_op",
        		lv_power_op_1_0, 
        		"power_op");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPower_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_1_1_0()); 
	    }
		lv_unary_expression_2_0=ruleunary_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPower_expressionRule());
	        }
       		add(
       			$current, 
       			"unary_expression",
        		lv_unary_expression_2_0, 
        		"unary_expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleunary_expression
entryRuleunary_expression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnary_expressionRule()); }
	 iv_ruleunary_expression=ruleunary_expression 
	 { $current=$iv_ruleunary_expression.current; } 
	 EOF 
;

// Rule unary_expression
ruleunary_expression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getUnary_expressionAccess().getOperatorUnary_opParserRuleCall_0_0_0()); 
	    }
		lv_operator_0_0=ruleunary_op		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_0_0, 
        		"unary_op");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUnary_expressionAccess().getUnary_expressionUnary_expressionParserRuleCall_0_1_0()); 
	    }
		lv_unary_expression_1_0=ruleunary_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
	        }
       		set(
       			$current, 
       			"unary_expression",
        		lv_unary_expression_1_0, 
        		"unary_expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getUnary_expressionAccess().getPar_expressionPar_expressionParserRuleCall_1_0()); 
	    }
		lv_par_expression_2_0=rulepar_expression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
	        }
       		set(
       			$current, 
       			"par_expression",
        		lv_par_expression_2_0, 
        		"par_expression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getUnary_expressionAccess().getFunction_callFunction_callParserRuleCall_2_0()); 
	    }
		lv_function_call_3_0=rulefunction_call		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
	        }
       		set(
       			$current, 
       			"function_call",
        		lv_function_call_3_0, 
        		"function_call");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getUnary_expressionAccess().getPrimaryPrimaryParserRuleCall_3_0()); 
	    }
		lv_primary_4_0=ruleprimary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnary_expressionRule());
	        }
       		set(
       			$current, 
       			"primary",
        		lv_primary_4_0, 
        		"primary");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleprimary
entryRuleprimary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	 iv_ruleprimary=ruleprimary 
	 { $current=$iv_ruleprimary.current; } 
	 EOF 
;

// Rule primary
ruleprimary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryAccess().getNumberNUMBERParserRuleCall_0_0()); 
	    }
		lv_number_0_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_0_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryAccess().getIdentifierVariable_nameParserRuleCall_1_0()); 
	    }
		lv_identifier_1_0=rulevariable_name		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryRule());
	        }
       		set(
       			$current, 
       			"identifier",
        		lv_identifier_1_0, 
        		"variable_name");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulevariable_name
entryRulevariable_name returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariable_nameRule()); }
	 iv_rulevariable_name=rulevariable_name 
	 { $current=$iv_rulevariable_name.current; } 
	 EOF 
;

// Rule variable_name
rulevariable_name returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_identifier_0_0=RULE_ID
		{
			newLeafNode(lv_identifier_0_0, grammarAccess.getVariable_nameAccess().getIdentifierIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariable_nameRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"identifier",
        		lv_identifier_0_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariable_nameAccess().getSelectorSelectorParserRuleCall_1_0()); 
	    }
		lv_selector_1_0=ruleselector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariable_nameRule());
	        }
       		add(
       			$current, 
       			"selector",
        		lv_selector_1_0, 
        		"selector");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariable_nameAccess().getFullStopKeyword_2_0());
    }
(
(
		lv_identifier_3_0=RULE_ID
		{
			newLeafNode(lv_identifier_3_0, grammarAccess.getVariable_nameAccess().getIdentifierIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariable_nameRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"identifier",
        		lv_identifier_3_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariable_nameAccess().getSelectorSelectorParserRuleCall_2_2_0()); 
	    }
		lv_selector_4_0=ruleselector		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariable_nameRule());
	        }
       		add(
       			$current, 
       			"selector",
        		lv_selector_4_0, 
        		"selector");
	        afterParserOrEnumRuleCall();
	    }

)
)?)*)
;





// Entry rule entryRuleselector
entryRuleselector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectorRule()); }
	 iv_ruleselector=ruleselector 
	 { $current=$iv_ruleselector.current; } 
	 EOF 
;

// Rule selector
ruleselector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSelectorAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectorAccess().getExpressionPrimaryParserRuleCall_1_0()); 
	    }
		lv_expression_1_0=ruleprimary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectorRule());
	        }
       		add(
       			$current, 
       			"expression",
        		lv_expression_1_0, 
        		"primary");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	',' 
)=>	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSelectorAccess().getCommaKeyword_2_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectorAccess().getExpressionPrimaryParserRuleCall_2_1_0()); 
	    }
		lv_expression_3_0=ruleprimary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectorRule());
	        }
       		add(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"primary");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSelectorAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleand_op
entryRuleand_op returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnd_opRule()); } 
	 iv_ruleand_op=ruleand_op 
	 { $current=$iv_ruleand_op.current.getText(); }  
	 EOF 
;

// Rule and_op
ruleand_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='&&' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnd_opAccess().getAmpersandAmpersandKeyword()); 
    }

    ;





// Entry rule entryRuleor_op
entryRuleor_op returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOr_opRule()); } 
	 iv_ruleor_op=ruleor_op 
	 { $current=$iv_ruleor_op.current.getText(); }  
	 EOF 
;

// Rule or_op
ruleor_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='||' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOr_opAccess().getVerticalLineVerticalLineKeyword()); 
    }

    ;





// Entry rule entryRulerelational_op
entryRulerelational_op returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelational_opRule()); } 
	 iv_rulerelational_op=rulerelational_op 
	 { $current=$iv_rulerelational_op.current.getText(); }  
	 EOF 
;

// Rule relational_op
rulerelational_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelational_opAccess().getLessThanSignKeyword_0()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelational_opAccess().getGreaterThanSignKeyword_1()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelational_opAccess().getLessThanSignEqualsSignKeyword_2()); 
    }

    |
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelational_opAccess().getGreaterThanSignEqualsSignKeyword_3()); 
    }

    |
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelational_opAccess().getEqualsSignEqualsSignKeyword_4()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelational_opAccess().getExclamationMarkEqualsSignKeyword_5()); 
    }
)
    ;





// Entry rule entryRulepower_op
entryRulepower_op returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPower_opRule()); } 
	 iv_rulepower_op=rulepower_op 
	 { $current=$iv_rulepower_op.current.getText(); }  
	 EOF 
;

// Rule power_op
rulepower_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='^' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPower_opAccess().getCircumflexAccentKeyword()); 
    }

    ;





// Entry rule entryRulemultiplicative_op
entryRulemultiplicative_op returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiplicative_opRule()); } 
	 iv_rulemultiplicative_op=rulemultiplicative_op 
	 { $current=$iv_rulemultiplicative_op.current.getText(); }  
	 EOF 
;

// Rule multiplicative_op
rulemultiplicative_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMultiplicative_opAccess().getAsteriskKeyword_0()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMultiplicative_opAccess().getSolidusKeyword_1()); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMultiplicative_opAccess().getPercentSignKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleadditive_op
entryRuleadditive_op returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdditive_opRule()); } 
	 iv_ruleadditive_op=ruleadditive_op 
	 { $current=$iv_ruleadditive_op.current.getText(); }  
	 EOF 
;

// Rule additive_op
ruleadditive_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAdditive_opAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAdditive_opAccess().getHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleunary_op
entryRuleunary_op returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnary_opRule()); } 
	 iv_ruleunary_op=ruleunary_op 
	 { $current=$iv_ruleunary_op.current.getText(); }  
	 EOF 
;

// Rule unary_op
ruleunary_op returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnary_opAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnary_opAccess().getHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleNUMBER
entryRuleNUMBER returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNUMBERRule()); } 
	 iv_ruleNUMBER=ruleNUMBER 
	 { $current=$iv_ruleNUMBER.current.getText(); }  
	 EOF 
;

// Rule NUMBER
ruleNUMBER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INTEGER_0=RULE_INTEGER    {
		$current.merge(this_INTEGER_0);
    }

    { 
    newLeafNode(this_INTEGER_0, grammarAccess.getNUMBERAccess().getINTEGERTerminalRuleCall_0()); 
    }

    |    this_FLOAT_1=RULE_FLOAT    {
		$current.merge(this_FLOAT_1);
    }

    { 
    newLeafNode(this_FLOAT_1, grammarAccess.getNUMBERAccess().getFLOATTerminalRuleCall_1()); 
    }
)
    ;





RULE_EXTERNAL_CODE : '***' ( options {greedy=false;} : . )*'***';

RULE_STRING : '"' (RULE_ESCAPE_SEQUENCE|~(('\\'|'"')))* '"';

fragment RULE_ESCAPE_SEQUENCE : ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|RULE_UNICODE_ESCAPE|RULE_OCTAL_ESCAPE);

fragment RULE_OCTAL_ESCAPE : ('\\' '0'..'3' '0'..'7' '0'..'7'|'\\' '0'..'7' '0'..'7'|'\\' '0'..'7');

fragment RULE_UNICODE_ESCAPE : '\\' 'u' RULE_HEXDIGIT RULE_HEXDIGIT RULE_HEXDIGIT RULE_HEXDIGIT;

fragment RULE_HEXDIGIT : ('0'..'9'|'a'..'f'|'A'..'F');

RULE_BOOLEAN : ('true'|'false');

RULE_INTEGER : ('0'|'1'..'9' ('0'..'9')*);

RULE_FLOAT : (('0'..'9')+ '.' ('0'..'9')* RULE_EXPONENT?|'.' ('0'..'9')+ RULE_EXPONENT?|('0'..'9')+ RULE_EXPONENT|'0'..'9');

fragment RULE_EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+;

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_BEGIN : '{';

RULE_END : '}';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


