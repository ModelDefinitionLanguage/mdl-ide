# Poisson count model
# PharmML Type1 equation for INDIVIDUAL_VARIABLES
# log link specified in OBSERVATION block definition

Poisson_DIST_dat = dataObj{
   DECLARED_VARIABLES{ Y }
	
   DATA_INPUT_VARIABLES{
      ID:{ use is id }
      TIME:{ use is ignore } # NOT USED IN MODEL
      CP:{ use is idv }
      DV:{ use is dv, variable=Y }
      MDV:{ use is mdv }
   }# end DATA_INPUT_VARIABLES

   	SOURCE {
	    srcFile : {file = "count.csv", 
        	inputFormat is nonmemFormat} 
	} # end SOURCE
} # end data object

Poisson_DIST_par = parObj{
   STRUCTURAL{
      #THETA
      POP_BASECOUNT : { value=10, lo=0 }
      POP_BETA      : { value=.5, lo=0, hi=10 }
   }# end STRUCTURAL

   VARIABILITY{
      PPV_EVENT:{value=0.04 ,type is var}
   }# end VARIABILITY

} # end of parameter object

Poisson_DIST_mdl = mdlObj{
   IDV{ CP }

   VARIABILITY_LEVELS{
	ID : { level=2, type is parameter }
	DV : { level=1, type is observation }
   }

   STRUCTURAL_PARAMETERS{
      POP_BASECOUNT
      POP_BETA
   }# end STRUCTURAL_PARAMETERS

   VARIABILITY_PARAMETERS{
      PPV_EVENT
   }# end VARIABILITY_PARAMETERS


   RANDOM_VARIABLE_DEFINITION(level=ID){
      eta_PPV_EVENT ~ Normal(mean=0, var=PPV_EVENT )
   }# end RANDOM_VARIABLE_DEFINITION
   
   INDIVIDUAL_VARIABLES{
	  ln(indiv_BASECOUNT) = linear( trans is ln, pop = POP_BASECOUNT, ranEff = [eta_PPV_EVENT] )
   }# end INDIVIDUAL_VARIABLES

  MODEL_PREDICTION{
  	lnLAMBDA=ln(indiv_BASECOUNT) + POP_BETA*CP
  	LAMBDA = exp(lnLAMBDA)
   }

	RANDOM_VARIABLE_DEFINITION(level=DV){
		Y ~ Poisson(lambda = LAMBDA)
	}

   OBSERVATION{
	  :: { type is count, variable=Y }
   }# end ESTIMATION

} # end of model object

Poisson_DIST_task = taskObj{
	ESTIMATE{ 
		set algo is saem 
	}
}# end of task object

Poisson_DIST_mog = mogObj {
	OBJECTS{
		Poisson_DIST_dat : { type is dataObj }
		Poisson_DIST_mdl : { type is mdlObj }
		Poisson_DIST_par : { type is parObj }
		Poisson_DIST_task : { type is taskObj }
	}
}
